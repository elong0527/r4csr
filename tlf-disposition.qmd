# Disposition {#sec-disposition}

```{r, include=FALSE}
source("_common.R")
```

Following [ICH E3 guidance](https://database.ich.org/sites/default/files/E3_Guideline.pdf),
a summary table needs to be provided to include all participants who entered the study in Section 10.1, Disposition of Participants.

The participant disposition table provides an overview of the study's participant numbers, 
detailing those who were randomized and their progression through each phase. 
It also presents the reasons for discontinuation after randomization, 
categorized by treatment and major factors such as 
lost to follow-up, adverse events, poor compliance, and others.

```{r}
library(haven) # Read SAS data
library(dplyr) # Manipulate data
library(tidyr) # Manipulate data
library(r2rtf) # Reporting in RTF format
```

This chapter provides a step-by-step guide on creating a simple disposition table in RTF format.
The expected output of the table is as follows:

```{r, out.width = "100%", out.height = if (knitr::is_html_output()) "400px", echo = FALSE, fig.align = "center"}
knitr::include_graphics("tlf/tbl_disp.pdf")
```

## Input data 

The initial step involves reading the necessary datasets into R. 
In the case of a disposition table, 
the required information is typically stored in a Subject-level Analysis Dataset (ADSL). 
The dataset provided is in `sas7bdat` format, commonly used in clinical trial analysis and reporting. 
To read the dataset while preserving its attributes, such as variable labels, 
we can use the `read_sas` function in haven package.

```{r}
adsl <- read_sas("data-adam/adsl.sas7bdat")
```

To prepare a simplified disposition of participants table using the `adsl` dataset, the following variables are utilized:

- `USUBJID`: unique subject identifier
- `TRT01P`: planned treatment
- `TRT01PN`: planned treatment numeric encoding
- `DISCONFL`: discontinued from study flag
- `DCREASCD`: discontinued from study reason

```{r}
adsl %>%
  select(USUBJID, TRT01P, TRT01PN, DISCONFL, DCREASCD) %>%
  head(4)
```

## Output data 

The objective of this section is to create a dataset suitable for generating the expected report. 
This process will consist of several steps to generate each component of the reporting dataset.

we can calculate the number of participants 
in the analysis population for each treatment arm by using following code.

```{r}
n_rand <- adsl %>%
  group_by(TRT01PN) %>%
  summarize(n = n()) %>%
  pivot_wider(
    names_from = TRT01PN,
    names_prefix = "n_",
    values_from = n
  ) %>%
  mutate(row = "Participants in population")

n_rand
```

Next, we calculate the number of participants who have been discontinued from the study.

```{r}
n_disc <- adsl %>%
  group_by(TRT01PN) %>%
  summarize(
    n = sum(DISCONFL == "Y"),
    pct = formatC(n / n() * 100,
      digits = 1, format = "f", width = 5
    )
  ) %>%
  pivot_wider(
    names_from = TRT01PN,
    values_from = c(n, pct)
  ) %>%
  mutate(row = "Discontinued")

n_disc
```

Additionally, we calculate the number and percentage of participants
who completed or discontinued the study, categorized by treatment arms and different reasons.

```{r}
n_reason <- adsl %>%
  group_by(TRT01PN) %>%
  mutate(n_total = n()) %>%
  group_by(TRT01PN, DCREASCD) %>%
  summarize(
    n = n(),
    pct = formatC(n / unique(n_total) * 100,
      digits = 1, format = "f", width = 5
    )
  ) %>%
  pivot_wider(
    id_cols = DCREASCD,
    names_from = TRT01PN,
    values_from = c(n, pct),
    values_fill = list(n = 0, pct = "  0.0")
  ) %>%
  rename(row = DCREASCD)

n_reason
```

In the following code, we compute the number and percentage of participants 
who successfully complete the study for each treatment arm. 
The splitting of `n_reason` is done to allow for customizing the row order within the resulting table.

```{r}
n_complete <- n_reason %>%
  filter(row == "Completed")

n_complete
```

The following code calculates the numbers and percentages of participants 
who discontinued the study for various reasons, categorized by treatment arms. 
To achieve indentation in the final report, 
the code `paste0("    ", row)` is employed to add leading spaces.

```{r}
n_reason <- n_reason %>%
  filter(row != "Completed") %>%
  mutate(row = paste0("    ", row))

n_reason
```


To summarize the data manipulation steps, 
we consolidate individual rows into a single table for reporting purposes. 
This table, named `tbl_disp`, 
serves as the input for generating the final report using the `r2rtf` package.

```{r}
tbl_disp <- bind_rows(n_rand, n_complete, n_disc, n_reason) %>%
  select(row, ends_with(c("_0", "_54", "_81")))

tbl_disp
```

## Reporting 

By using `tbl_disp` as input, we create generate the disposition table using following code.
The `r2rtf` elements that were not covered in the previous sections are highlighted.
Here, the `rtf_title` function is utilized to define the title of the table. 
For the `title` argument, 
you can provide a vector where each value represents a separate line. 


```{r}
tbl_disp %>%
  # Table title
  rtf_title("Disposition of Participants") %>%
  # First row of column header
  rtf_colheader(" | Placebo | Xanomeline Low Dose| Xanomeline High Dose",
    col_rel_width = c(3, rep(2, 3))
  ) %>%
  # Second row of column header
  rtf_colheader(" | n | (%) | n | (%) | n | (%)",
    col_rel_width = c(3, rep(c(0.7, 1.3), 3)),
    border_top = c("", rep("single", 6)),
    border_left = c("single", rep(c("single", ""), 3))
  ) %>%
  # Table body
  rtf_body(
    col_rel_width = c(3, rep(c(0.7, 1.3), 3)),
    text_justification = c("l", rep("c", 6)),
    border_left = c("single", rep(c("single", ""), 3))
  ) %>%
  # Encoding RTF syntax
  rtf_encode() %>%
  # Save to a file
  write_rtf("tlf/tbl_disp.rtf")
```

```{r, include=FALSE}
rtf2pdf("tlf/tbl_disp.rtf")
```

```{r, out.width = "100%", out.height = if (knitr::is_html_output()) "400px", echo = FALSE, fig.align = "center"}
knitr::include_graphics("tlf/tbl_disp.pdf")
```


