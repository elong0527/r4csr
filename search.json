[{"path":"index.html","id":"welcome","chapter":"Welcome!","heading":"Welcome!","text":"Welcome R clinical study reports submission.\nClinical study reports (CSR) essential parts clinical trial development.\nCSR “integrated” full scientific report individual clinical trial.ICH E3: structure content clinical study reports\nprovides guidance assist sponsors development CSR.\nbook, learn use R prepare CSR \nsubmit regulatory agencies.work--progress draft.","code":""},{"path":"index.html","id":"license","chapter":"Welcome!","heading":"License","text":"book licensed Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License.","code":""},{"path":"preface.html","id":"preface","chapter":"Preface","heading":"Preface","text":"","code":""},{"path":"preface.html","id":"folder-structure","chapter":"Preface","heading":"0.1 Folder structure","text":"clinical trial development, source code needs developed maintained generate deliver\nStudy Data Tabulation Model (SDTM), Analysis Dataset Model (ADaM) datasets tables, listings, figures (TLFs).\ntypical example Phase 3 clinical trial hundreds TLFs required submission.\nConsidering number programs required effort,\nconsistent well-defined folder structure crucial \nmanaging clinical trial analysis reporting (&R) project.recommend using \nR package folder structure\norganize &R-related source code documentation clinical trial &R project.\nR package folder structure well defined widely used R community repositories (e.g., CRAN).consistent approach using R package folder structure\nsimplifies communication developers within across organizations.new R developer, essential step develop R packages\nwant share work others.\nlearn one folder structure widely used R community\noutstanding tutorials tools free.experienced R developer, minimal learning curve.organization, simplifies process, tool, template,\ntraining development, unified folder structure used\ndevelop maintain standard tool analysis projects.workflow around R package can also improve\ntraceability reproducibility analysis project (Marwick, Boettiger, Mullen 2018).revisit folder structure discuss project management clinical trial project.addition, R package folder structure also recommended\ndevelop Shiny apps discussed\nChapter 20 Mastering Shiny book\nEngineering Production-Grade Shiny Apps book.","code":""},{"path":"preface.html","id":"in-this-book","chapter":"Preface","heading":"0.2 In this book","text":"book intermediate-level book \nassuming readers R programming clinical development knowledge.\nassumption part :Part 1, “Delivering TLFs CSR” provides general information examples\ncreate tables, listings, figures.\npart, assume readers individual contributors clinical project\nexperience R programming.\nexpect readers familiar data manipulation R.\ngood references include Hands-Programming R,\nR Data Science \nData Manipulation R.Part 1, “Delivering TLFs CSR” provides general information examples\ncreate tables, listings, figures.\npart, assume readers individual contributors clinical project\nexperience R programming.\nexpect readers familiar data manipulation R.\ngood references include Hands-Programming R,\nR Data Science \nData Manipulation R.Part 2, “Clinical trial project” provides general information\nexamples manage clinical trial &R project.\npart, assume reader project lead experience R package development.\ngood references include R Packages \ntidyverse style guide.Part 2, “Clinical trial project” provides general information\nexamples manage clinical trial &R project.\npart, assume reader project lead experience R package development.\ngood references include R Packages \ntidyverse style guide.Part 3, “eCTD submission package” provides general information preparing\nsubmission packages related clinical study report (CSR) \nelectronic Common Technical Document (eCTD).\npart, assume reader project lead clinical project\nexperience R package development submission.Part 3, “eCTD submission package” provides general information preparing\nsubmission packages related clinical study report (CSR) \nelectronic Common Technical Document (eCTD).\npart, assume reader project lead clinical project\nexperience R package development submission.","code":""},{"path":"preface.html","id":"philosophy","chapter":"Preface","heading":"0.3 Philosophy","text":"share philosophy described \nSection 1.1 R Packages book\nquote .“Anything can automated, automated.”“little possible hand. much possible functions.”“goal spend time thinking want \nrather thinking minutiae package structure.”","code":""},{"path":"preface.html","id":"authors-and-contributors","chapter":"Preface","heading":"0.4 Authors and contributors","text":"document maintained community.\nreading document, can contributor well.\nquality document relies .Authors: contributed majority content least one chapter.\nYilong Zhang <yilong.zhang@merck.com>, Nan Xiao, Keaven Anderson, Yalin ZhuAuthors: contributed majority content least one chapter.Yilong Zhang <yilong.zhang@merck.com>, Nan Xiao, Keaven Anderson, Yalin ZhuContributors: contributed least one commit source code.\ngrateful improvements brought contributors (chronological order): Yujie Zhao (@LittleBeannie), Aiming Yang, Steven Haesendonckx (@SHAESEN2), Howard Baek (@howardbaek), Xiaoxia Han (@echohan).Contributors: contributed least one commit source code.grateful improvements brought contributors (chronological order): Yujie Zhao (@LittleBeannie), Aiming Yang, Steven Haesendonckx (@SHAESEN2), Howard Baek (@howardbaek), Xiaoxia Han (@echohan).","code":""},{"path":"tlf-overview.html","id":"tlf-overview","chapter":"1 Overview","heading":"1 Overview","text":"","code":""},{"path":"tlf-overview.html","id":"background","chapter":"1 Overview","heading":"1.1 Background","text":"clinical trials, critical step submit trial results regulatory agencies.\nElectronic Common Technical Document (eCTD)\nbecome worldwide regulatory submission standard format.\nexample, United States Food Drug Administration (US FDA) requires\nnew drug applications biologics license applications\nmust submitted using eCTD format.\nClinical Data Interchange Standards Consortium (CDISC) provides \npilot project following ICH E3 guidance.Within eCTD, clinical study reports (CSRs) located module 5.\nICH E3 guidance provides\ncompilation structure content clinical study reports.typical CSR contains full details methods results individual clinical study.\nsupport statistical analysis, large number tables, listings, figures \nincorporated main text appendices.\nCDISC pilot project, \nexample CSR\nalso provided. interested examples clinical study reports,\ncan go European Medicines Agency (EMA) clinical data website.Building CSRs teamwork clinicians, medical writers, statisticians, statistical programmers,\nrelevant specialists experts biomarkers.\n, focus work deliverables completed statisticians statistical programmers.\norganization, commonly work together \ndefine, develop, validate deliver tables, listings, figures (TLFs) required CSR \nsummarize efficacy /safety pharmaceutical product.\nMicrosoft Word widely used prepare CSR pharmaceutical industry.\nTherefore, .rtf, .doc, .docx commonly used formats deliverables.chapter, focus illustrate create tables, listings, figures (TLFs) RTF format\ncommonly used CSR. examples compliance \nFDA’s Portable Document Format (PDF) Specifications.FDA’s PDF specification general reference. organization can define\nspecific TLF format requirements can different examples book.","code":""},{"path":"tlf-overview.html","id":"structure-and-content","chapter":"1 Overview","heading":"1.2 Structure and content","text":"rest chapter, following \nICH E3 guidance\nstructure content clinical study reports.CSR, TLFs located inSection 10: Study participantsSection 11: Efficacy evaluationSection 12: Safety evaluationSection 14: Tables, listings, figures referrals included textSection 16: Appendices","code":""},{"path":"tlf-overview.html","id":"datasets","chapter":"1 Overview","heading":"1.3 Datasets","text":"used publicly available CDISC pilot\nstudy data located CDISC Bitbucket repository.simplicity, downloaded datasets data-adam/\nfolder project converted .xpt format \n.sas7bdat format.dataset structure follows\nCDISC Analysis Data Model (ADaM).","code":""},{"path":"tlf-overview.html","id":"tools","chapter":"1 Overview","heading":"1.4 Tools","text":"part, mainly use R packages illustrate\ndeliver TLFs CSR.tidyverse: prepare datasets ready reporting.r2rtf: create RTF outputsThere R packages create TLFs ASCIII, RTF Word format.\nexample, rtables, huxtable, pharmaRTF, gt, officer, flextable etc.\nfocus r2rtf illustrate concept.\nReader encourage explore R packages find proper tools fit purpose.","code":""},{"path":"tlf-overview.html","id":"tidyverse","chapter":"1 Overview","heading":"1.4.1 tidyverse","text":"tidyverse collection R packages simplify workflow manipulate,\nvisualize analyze data R.\nR packages share\ntidy tools manifesto\neasy use interactive data analysis.RStudio provided outstanding cheatsheets\ntutorials tidyverse.also books introduce tidyverse.\nassume reader experience using tidyverse book.tidyverse cookbookR Data Science","code":""},{"path":"tlf-overview.html","id":"r2rtf","chapter":"1 Overview","heading":"1.4.2 r2rtf","text":"r2rtf R package create production-ready tables figures RTF format.\nR package designed toprovide simple “verb” functions correspond component table,\nhelp translate data frame table RTF file;enable pipes (%>%);focus table format .\nData manipulation analysis shall handled R packages (e.g., tidyverse).creating RTF table, need tofigure table layout;split layout small tasks form computer program;execute program.provide brief introduction r2rtf showe transfer\ndata frames table, listing, figures (TLFs).extended examples features covered \nr2rtf package website.explore basic RTF generation verbs r2rtf,\nuse dataset r2rtf_adae saved r2rtf package.\ndataset contains adverse events (AEs) information clinical trial.begin loading packages:meaning relevant variables.\ninformation can found help page dataset (?r2rtf_adae)example, consider three variables:USUBJID: Unique Subject IdentifierTRTA: Actual TreatmentAEDECOD: Dictionary-Derived Termdplyr tidyr packages within tidyverse used\ndata manipulation create data frame\ncontains information want add RTF table.Now dataset tbl preparing final RTF table.r2rtf aims provide one function type table layout.\nCommonly used verbs include:rtf_page(): RTF page informationrtf_title(): RTF title informationrtf_colheader(): RTF column header informationrtf_body(): RTF table body informationrtf_footnote(): RTF footnote informationrtf_source(): RTF data source informationAll verbs designed enable usage pipes (%>%).\nfull list functions can found \nr2rtf package function reference manual.minimal example illustrates combine verbs using pipes create RTF table.rtf_body() used define table body layout.rtf_encode() transfers table layout information RTF syntax.write_rtf() save RTF encoding file file extension .rtfIf want adjust width column \nprovide space first column,\ncan achieved updating col_rel_width argument\nrtf_body() function.example, input col_rel_width vector\nlength number columns.\nargument defines relative width column\nwithin pre-defined total column width.example, defined relative width 3:2:2:2.\nratio col_rel_width used.\nTherefore equivalent use col_rel_width = c(6, 4, 4, 4)\ncol_rel_width = c(1.5, 1, 1, 1).previous example, found issue misaligned column header.\ncan fix issue using rtf_colheader() function.rtf_colheader(), colheader argument used provide content column header.\nuse \"|\" separate columns.example , \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\"\ndefine column header 4 columns.rtf_*() functions rtf_body(), rtf_footnote(),\ntext_justification argument used align text.\nDefault \"c\" center justification.\nvary text justification column, use character vector length vector equal \nnumber columns displayed (e.g., c(\"c\", \"l\", \"r\")).possible inputs can found table .example make first column left-aligned center-aligned rest.rtf_*() functions rtf_body(), rtf_footnote(), etc.,\nborder_left, border_right, border_top, border_bottom control cell borders.want remove top border \"Adverse Events\" header,\ncan change default value \"single\" \"\" border_top argument, shown .r2rtf support 26 different border types. details can found \nr2rtf package website.example, also demonstrate possibility adding multiple column headers.r2rtf R package get started page,\nexamples illustrate customizetitle, subtitlefootnote, data sourcespecial characteretc.features introduced first use rest chapters.","code":"\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nr2rtf_adae %>%\n  select(USUBJID, TRTA, AEDECOD) %>%\n  head(4)#>       USUBJID    TRTA                   AEDECOD\n#> 1 01-701-1015 Placebo APPLICATION SITE ERYTHEMA\n#> 2 01-701-1015 Placebo APPLICATION SITE PRURITUS\n#> 3 01-701-1015 Placebo                 DIARRHOEA\n#> 4 01-701-1023 Placebo                  ERYTHEMA\ntbl <- r2rtf_adae %>%\n  count(TRTA, AEDECOD) %>%\n  pivot_wider(names_from = TRTA, values_from = n, values_fill = 0)\n\ntbl %>% head(4)#> # A tibble: 4 × 4\n#>   AEDECOD        Placebo `Xanomeline High Dose` `Xanomeline Low Dose`\n#>   <chr>            <int>                  <int>                 <int>\n#> 1 ABDOMINAL PAIN       1                      2                     3\n#> 2 AGITATION            2                      1                     2\n#> 3 ALOPECIA             1                      0                     0\n#> 4 ANXIETY              2                      0                     4\nhead(tbl) %>%\n  rtf_body() %>% # Step 1 Add table  attributes\n  rtf_encode() %>% # Step 2 Convert attributes to RTF encode\n  write_rtf(\"tlf/intro-ae1.rtf\") # Step 3 Write to a .rtf file\nhead(tbl) %>%\n  rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%\n  # define relative width\n  rtf_encode() %>%\n  write_rtf(\"tlf/intro-ae2.rtf\")\nhead(tbl) %>%\n  rtf_colheader(\n    colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",\n    col_rel_width = c(3, 2, 2, 2)\n  ) %>%\n  rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/intro-ae3.rtf\")\nr2rtf:::justification()#>   type      name rtf_code_text rtf_code_row\n#> 1    l      left          \\\\ql       \\\\trql\n#> 2    c    center          \\\\qc       \\\\trqc\n#> 3    r     right          \\\\qr       \\\\trqr\n#> 4    d   decimal          \\\\qj             \n#> 5    j justified          \\\\qj\nhead(tbl) %>%\n  rtf_body(text_justification = c(\"l\", \"c\", \"c\", \"c\")) %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/intro-ae5.rtf\")\nhead(tbl) %>%\n  rtf_colheader(\n    colheader = \" | Treatment\",\n    col_rel_width = c(3, 6)\n  ) %>%\n  rtf_colheader(\n    colheader = \"Adverse Events | Placebo | Xanomeline High Dose | Xanomeline Low Dose\",\n    border_top = c(\"\", \"single\", \"single\", \"single\"),\n    col_rel_width = c(3, 2, 2, 2)\n  ) %>%\n  rtf_body(col_rel_width = c(3, 2, 2, 2)) %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/intro-ae7.rtf\")"},{"path":"disposition.html","id":"disposition","chapter":"2 Disposition","heading":"2 Disposition","text":"Following ICH E3 guidance,\nsummary table needs provided include participants entered study Section 10.1, Disposition Participants.disposition participants table reports numbers participants randomized,\nentered completed phase study.\naddition, reasons post-randomization discontinuations,\ngrouped treatment major reason (lost follow-, adverse event, poor compliance, etc.) reported.chapter, show create typical disposition table.first step read relevant datasets R.\ndisposition table, required information saved Subject-level Analysis Dataset (ADSL).\ndataset provided sas7bdat format, SAS data format currently used many clinical trial analysis report.\nhaven package able read dataset, maintaining attributes (e.g., variable labels).following variables used preparation simplified disposition participants table:USUBJID: unique subject identifierTRT01P: planned treatmentTRT01PN: planned treatment numeric encodingDISCONFL: discontinued study flagDCREASCD: discontinued study reason codedIn code , calculate number participants analysis population treatment arms.code , calculate number percentage \nparticipants completed/discontinued study different reasons treatment arms.code , calculate number percentage participants complete study treatment arms.\nsplit n_reason want customize row order table.code , calculate numbers percentages participants discontinued study different reasons treatment arms.\ndisplay purpose, paste0(\"    \", row) used add leading spaces produce indentation final report.Now combine individual rows one table reporting purpose.\ntbl_disp used input r2rtf create final report.code, formatting final table defined.\nItems discussed previous sections, highlighted .rtf_title defines table title.\ncan provide vector title argument.\nvalue separate line.\nformat can also controlled providing vector input text format.procedure generate disposition table can summarized follows:Step 1: Read subject level data (.e., adsl) R.Step 2: Count participants analysis population name dataset n_rand.Step 3: Calculate number percentage participants discontinued study treatment arm, name dataset n_disc.Step 4: Calculate numbers percentages participants discontinued study different reasons treatment arm,\nname dataset n_reason.Step 5: Calculate number percentage participants completed study treatment arm, name dataset n_complete.Step 6: Bind n_rand, n_disc, n_reason, n_complete row.Step 7: Write final table RTF","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nadsl %>%\n  select(USUBJID, TRT01P, TRT01PN, DISCONFL, DCREASCD) %>%\n  head(4)#> # A tibble: 4 × 5\n#>   USUBJID     TRT01P               TRT01PN DISCONFL DCREASCD        \n#>   <chr>       <chr>                  <dbl> <chr>    <chr>           \n#> 1 01-701-1015 Placebo                    0 \"\"       Completed       \n#> 2 01-701-1023 Placebo                    0 \"Y\"      Adverse Event   \n#> 3 01-701-1028 Xanomeline High Dose      81 \"\"       Completed       \n#> 4 01-701-1033 Xanomeline Low Dose       54 \"Y\"      Sponsor Decision\nn_rand <- adsl %>%\n  group_by(TRT01PN) %>%\n  summarize(n = n()) %>%\n  pivot_wider(\n    names_from = TRT01PN,\n    names_prefix = \"n_\",\n    values_from = n\n  ) %>%\n  mutate(row = \"Participants in population\")\n\nn_rand#> # A tibble: 1 × 4\n#>     n_0  n_54  n_81 row                       \n#>   <int> <int> <int> <chr>                     \n#> 1    86    84    84 Participants in population\nn_disc <- adsl %>%\n  group_by(TRT01PN) %>%\n  summarize(\n    n = sum(DISCONFL == \"Y\"),\n    pct = formatC(n / n() * 100,\n      digits = 1, format = \"f\", width = 5\n    )\n  ) %>%\n  pivot_wider(\n    names_from = TRT01PN,\n    values_from = c(n, pct)\n  ) %>%\n  mutate(row = \"Discontinued\")\n\nn_disc#> # A tibble: 1 × 7\n#>     n_0  n_54  n_81 pct_0   pct_54  pct_81  row         \n#>   <int> <int> <int> <chr>   <chr>   <chr>   <chr>       \n#> 1    28    59    57 \" 32.6\" \" 70.2\" \" 67.9\" Discontinued\nn_reason <- adsl %>%\n  group_by(TRT01PN) %>%\n  mutate(n_total = n()) %>%\n  group_by(TRT01PN, DCREASCD) %>%\n  summarize(\n    n = n(),\n    pct = formatC(n / unique(n_total) * 100,\n      digits = 1, format = \"f\", width = 5\n    )\n  ) %>%\n  pivot_wider(\n    id_cols = DCREASCD,\n    names_from = TRT01PN,\n    values_from = c(n, pct),\n    values_fill = list(n = 0, pct = \"  0.0\")\n  ) %>%\n  rename(row = DCREASCD)\n\nn_reason#> # A tibble: 10 × 7\n#>    row                  n_0  n_54  n_81 pct_0   pct_54  pct_81 \n#>    <chr>              <int> <int> <int> <chr>   <chr>   <chr>  \n#>  1 Adverse Event          8    44    40 \"  9.3\" \" 52.4\" \" 47.6\"\n#>  2 Completed             58    25    27 \" 67.4\" \" 29.8\" \" 32.1\"\n#>  3 Death                  2     1     0 \"  2.3\" \"  1.2\" \"  0.0\"\n#>  4 I/E Not Met            1     0     2 \"  1.2\" \"  0.0\" \"  2.4\"\n#>  5 Lack of Efficacy       3     0     1 \"  3.5\" \"  0.0\" \"  1.2\"\n#>  6 Lost to Follow-up      1     1     0 \"  1.2\" \"  1.2\" \"  0.0\"\n#>  7 Physician Decision     1     0     2 \"  1.2\" \"  0.0\" \"  2.4\"\n#>  8 Protocol Violation     1     1     1 \"  1.2\" \"  1.2\" \"  1.2\"\n#>  9 Sponsor Decision       2     2     3 \"  2.3\" \"  2.4\" \"  3.6\"\n#> 10 Withdrew Consent       9    10     8 \" 10.5\" \" 11.9\" \"  9.5\"\nn_complete <- n_reason %>%\n  filter(row == \"Completed\")\n\nn_complete#> # A tibble: 1 × 7\n#>   row         n_0  n_54  n_81 pct_0   pct_54  pct_81 \n#>   <chr>     <int> <int> <int> <chr>   <chr>   <chr>  \n#> 1 Completed    58    25    27 \" 67.4\" \" 29.8\" \" 32.1\"\nn_reason <- n_reason %>%\n  filter(row != \"Completed\") %>%\n  mutate(row = paste0(\"    \", row))\n\nn_reason#> # A tibble: 9 × 7\n#>   row                        n_0  n_54  n_81 pct_0   pct_54  pct_81 \n#>   <chr>                    <int> <int> <int> <chr>   <chr>   <chr>  \n#> 1 \"    Adverse Event\"          8    44    40 \"  9.3\" \" 52.4\" \" 47.6\"\n#> 2 \"    Death\"                  2     1     0 \"  2.3\" \"  1.2\" \"  0.0\"\n#> 3 \"    I/E Not Met\"            1     0     2 \"  1.2\" \"  0.0\" \"  2.4\"\n#> 4 \"    Lack of Efficacy\"       3     0     1 \"  3.5\" \"  0.0\" \"  1.2\"\n#> 5 \"    Lost to Follow-up\"      1     1     0 \"  1.2\" \"  1.2\" \"  0.0\"\n#> 6 \"    Physician Decision\"     1     0     2 \"  1.2\" \"  0.0\" \"  2.4\"\n#> 7 \"    Protocol Violation\"     1     1     1 \"  1.2\" \"  1.2\" \"  1.2\"\n#> 8 \"    Sponsor Decision\"       2     2     3 \"  2.3\" \"  2.4\" \"  3.6\"\n#> 9 \"    Withdrew Consent\"       9    10     8 \" 10.5\" \" 11.9\" \"  9.5\"\ntbl_disp <- bind_rows(n_rand, n_complete, n_disc, n_reason) %>%\n  select(row, ends_with(c(\"_0\", \"_54\", \"_81\")))\n\ntbl_disp#> # A tibble: 12 × 7\n#>    row                            n_0 pct_0    n_54 pct_54   n_81 pct_81 \n#>    <chr>                        <int> <chr>   <int> <chr>   <int> <chr>  \n#>  1 \"Participants in population\"    86  <NA>      84  <NA>      84  <NA>  \n#>  2 \"Completed\"                     58 \" 67.4\"    25 \" 29.8\"    27 \" 32.1\"\n#>  3 \"Discontinued\"                  28 \" 32.6\"    59 \" 70.2\"    57 \" 67.9\"\n#>  4 \"    Adverse Event\"              8 \"  9.3\"    44 \" 52.4\"    40 \" 47.6\"\n#>  5 \"    Death\"                      2 \"  2.3\"     1 \"  1.2\"     0 \"  0.0\"\n#>  6 \"    I/E Not Met\"                1 \"  1.2\"     0 \"  0.0\"     2 \"  2.4\"\n#>  7 \"    Lack of Efficacy\"           3 \"  3.5\"     0 \"  0.0\"     1 \"  1.2\"\n#>  8 \"    Lost to Follow-up\"          1 \"  1.2\"     1 \"  1.2\"     0 \"  0.0\"\n#>  9 \"    Physician Decision\"         1 \"  1.2\"     0 \"  0.0\"     2 \"  2.4\"\n#> 10 \"    Protocol Violation\"         1 \"  1.2\"     1 \"  1.2\"     1 \"  1.2\"\n#> 11 \"    Sponsor Decision\"           2 \"  2.3\"     2 \"  2.4\"     3 \"  3.6\"\n#> 12 \"    Withdrew Consent\"           9 \" 10.5\"    10 \" 11.9\"     8 \"  9.5\"\ntbl_disp %>%\n  # Table title\n  rtf_title(\"Disposition of Participants\") %>%\n  # First row of column header\n  rtf_colheader(\" | Placebo | Xanomeline Low Dose| Xanomeline High Dose\",\n    col_rel_width = c(3, rep(2, 3))\n  ) %>%\n  # Second row of column header\n  rtf_colheader(\" | n | (%) | n | (%) | n | (%)\",\n    col_rel_width = c(3, rep(c(0.7, 1.3), 3)),\n    border_top = c(\"\", rep(\"single\", 6)),\n    border_left = c(\"single\", rep(c(\"single\", \"\"), 3))\n  ) %>%\n  # Table body\n  rtf_body(\n    col_rel_width = c(3, rep(c(0.7, 1.3), 3)),\n    text_justification = c(\"l\", rep(\"c\", 6)),\n    border_left = c(\"single\", rep(c(\"single\", \"\"), 3))\n  ) %>%\n  # Encoding RTF syntax\n  rtf_encode() %>%\n  # Save to a file\n  write_rtf(\"tlf/tbl_disp.rtf\")"},{"path":"population.html","id":"population","chapter":"3 Analysis population","heading":"3 Analysis population","text":"Following ICH E3\nguidance,\nneed summarize number participants included efficacy\nanalysis Section 11.1, Data Sets Analysed.chapter, illustrate create summary table \nanalysis population study.first step read relevant datasets R. analysis\npopulation table, required information saved ADSL\ndataset. can use haven package read dataset.illustrate prepare report data simplified analysis\npopulation table using variables :USUBJID: unique subject identifierITTFL: intent--treat population flagEFFFL: efficacy population flagSAFFL: safty population flag","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nadsl %>%\n  select(USUBJID, ITTFL, EFFFL, SAFFL) %>%\n  head(4)#> # A tibble: 4 × 4\n#>   USUBJID     ITTFL EFFFL SAFFL\n#>   <chr>       <chr> <chr> <chr>\n#> 1 01-701-1015 Y     Y     Y    \n#> 2 01-701-1023 Y     Y     Y    \n#> 3 01-701-1028 Y     Y     Y    \n#> 4 01-701-1033 Y     Y     Y"},{"path":"population.html","id":"helper-functions","chapter":"3 Analysis population","heading":"3.1 Helper functions","text":"write analysis code, let’s discuss possibility reusing R\ncode writing helper functions.discussed R data\nscience,\n“consider writing function whenever ’ve copied \npasted block code twice”.Chapter 2, repeating steps :Format percentages using formatC() function.Calculate numbers percentages treatment arm.create two ad-hoc functions use create \ntables rest book.format numbers percentages, create function called\nfmt_num(). simple function wrapping formatC().main reason create fmt_num() function enhance \nreadability analysis code.example, can compare two versions code format \npercentage used Chapter 2 fmt_num.calculate numbers percentages participants groups, \nprovide simple (robust) wrapper function, count_by(), using\ndplyr tidyr package.function can enhanced multiple ways, focus \nsimplicity readability. details writing R functions can\nfound Stat454\ncourse.using count_by() function, can simplify analysis code \n.","code":"\nfmt_num <- function(x, digits, width = digits + 4) {\n  formatC(x,\n    digits = digits,\n    format = \"f\",\n    width = width\n  )\n}\nformatC(n / n() * 100,\n  digits = 1, format = \"f\", width = 5\n)\nfmt_num(n / n() * 100, digits = 1)\ncount_by <- function(data, # Input data set\n                     grp, # Group variable\n                     var, # Analysis variable\n                     var_label = var, # Analysis variable label\n                     id = \"USUBJID\") { # Subject ID variable\n  data <- data %>% rename(grp = !!grp, var = !!var, id = !!id)\n\n  left_join(\n    count(data, grp, var),\n    count(data, grp, name = \"tot\"),\n    by = \"grp\",\n  ) %>%\n    mutate(\n      pct = fmt_num(100 * n / tot, digits = 1),\n      n = fmt_num(n, digits = 0),\n      npct = paste0(n, \" (\", pct, \")\")\n    ) %>%\n    pivot_wider(\n      id_cols = var,\n      names_from = grp,\n      values_from = c(n, pct, npct),\n      values_fill = list(n = \"0\", pct = fmt_num(0, digits = 0))\n    ) %>%\n    mutate(var_label = var_label)\n}\ncount_by(adsl, \"TRT01PN\", \"EFFFL\") %>%\n  select(-ends_with(c(\"_54\", \"_81\")))#> # A tibble: 2 × 5\n#>   var   n_0    pct_0   npct_0         var_label\n#>   <chr> <chr>  <chr>   <chr>          <chr>    \n#> 1 N     \"   7\" \"  8.1\" \"   7 (  8.1)\" EFFFL    \n#> 2 Y     \"  79\" \" 91.9\" \"  79 ( 91.9)\" EFFFL"},{"path":"population.html","id":"analysis-code","chapter":"3 Analysis population","heading":"3.2 Analysis code","text":"helper function count_by, can easily prepare report\ndataset asNow combine individual rows one table reporting\npurpose. tbl_pop used input r2rtf create final\nreport.define format output using code .procedure generate analysis population table can summarized\nfollows:Step 1: Read data (.e., adsl) R.Step 2: Bind counts/percentages ITT population, \nefficacy population, safety population row using \ncount_by() function.Step 3: Format output Step 2 using r2rtf.","code":"\n# Derive a randomization flag\nadsl <- adsl %>% mutate(RANDFL = \"Y\")\n\npop <- count_by(adsl, \"TRT01PN\", \"RANDFL\",\n  var_label = \"Participants in Population\"\n) %>%\n  select(var_label, starts_with(\"n_\"))\npop1 <- bind_rows(\n  count_by(adsl, \"TRT01PN\", \"ITTFL\",\n    var_label = \"Participants included in ITT population\"\n  ),\n  count_by(adsl, \"TRT01PN\", \"EFFFL\",\n    var_label = \"Participants included in efficacy population\"\n  ),\n  count_by(adsl, \"TRT01PN\", \"SAFFL\",\n    var_label = \"Participants included in safety population\"\n  )\n) %>%\n  filter(var == \"Y\") %>%\n  select(var_label, starts_with(\"npct_\"))\nnames(pop) <- gsub(\"n_\", \"npct_\", names(pop))\ntbl_pop <- bind_rows(pop, pop1)\n\ntbl_pop %>% select(var_label, npct_0)#> # A tibble: 4 × 2\n#>   var_label                                    npct_0        \n#>   <chr>                                        <chr>         \n#> 1 Participants in Population                   \"  86\"        \n#> 2 Participants included in ITT population      \"  86 (100.0)\"\n#> 3 Participants included in efficacy population \"  79 ( 91.9)\"\n#> 4 Participants included in safety population   \"  86 (100.0)\"\nrel_width <- c(2, rep(1, 3))\ncolheader <- \" | Placebo | Xanomeline line Low Dose| Xanomeline line High Dose\"\ntbl_pop %>%\n  # Table title\n  rtf_title(\n    \"Summary of Analysis Sets\", ## \"Participants Accounting in Analysis Population\" is a weird title for me. Merck uses this table title for CSR? \n    \"(All Participants Randomized)\"\n  ) %>%\n  # First row of column header\n  rtf_colheader(colheader,\n    col_rel_width = rel_width\n  ) %>%\n  # Second row of column header\n  rtf_colheader(\" | n (%) | n (%) | n (%)\",\n    border_top = \"\",\n    col_rel_width = rel_width\n  ) %>%\n  # Table body\n  rtf_body(\n    col_rel_width = rel_width,\n    text_justification = c(\"l\", rep(\"c\", 3))\n  ) %>%\n  # Encoding RTF syntax\n  rtf_encode() %>%\n  # Save to a file\n  write_rtf(\"tlf/tbl_pop.rtf\")"},{"path":"baseline-characteristics.html","id":"baseline-characteristics","chapter":"4 Baseline characteristics","heading":"4 Baseline characteristics","text":"Following ICH E3 guidance,\nneed summarize critical demographic baseline characteristics participants\nSection 11.2, Demographic Baseline Characteristics.chapter, illustrate create simplified\nbaseline characteristics table study.many R packages can efficiently summarize baseline information.\ntable1 R package one .previous chapters, first read adsl dataset contains \nrequired information baseline characteristics table.simplicity, analyze SEX, AGE , RACE example\nusing table1 R package. details table1 R package can\nfound package\nvignettes.table1 R package directly creates HTML report.code transfer output dataframe\ncontains ASCII characters\nrecommended regulatory agencies.\ntbl_base used input r2rtf create final report.define format output. highlight items \ndiscussed previous discussion.text_indent_first test_indent_left used control indent\nspace text. helpful need control white space\nlong phrase “AMERICAN INDIAN ALASKA NATIVE”\ntable provide example.conclusion, procedure generate demographic baseline characteristics table summarized follows:Step 1: Read data set.Step 2: Use table1::table1() get baseline characteristics table.Step 3: Transfer output Step 2 data frame contains ASCII characters.Step 4: Define format RTF table using R package r2rtf.","code":"\nlibrary(table1)\nlibrary(r2rtf)\nlibrary(haven)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(tools)\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nana <- adsl %>%\n  mutate(\n    SEX = factor(SEX, c(\"F\", \"M\"), c(\"Female\", \"Male\")),\n    RACE = toTitleCase(tolower(RACE))\n  )\n\ntbl <- table1(~ SEX + AGE + RACE | TRT01P, data = ana)\ntbl\ntbl_base <- tbl %>%\n  as.data.frame() %>%\n  as_tibble() %>%\n  mutate(across(\n    everything(),\n    ~ str_replace_all(.x, intToUtf8(160), \" \")\n  ))\n\n\nnames(tbl_base) <- str_replace_all(names(tbl_base), intToUtf8(160), \" \")\ntbl_base#> # A tibble: 11 × 5\n#>    ` `              Placebo     `Xanomeline High … `Xanomeline Low … Overall    \n#>    <chr>            <chr>       <chr>              <chr>             <chr>      \n#>  1 \"\"               \"(N=86)\"    \"(N=84)\"           \"(N=84)\"          \"(N=254)\"  \n#>  2 \"SEX\"            \"\"          \"\"                 \"\"                \"\"         \n#>  3 \"  Female\"       \"53 (61.6%… \"40 (47.6%)\"       \"50 (59.5%)\"      \"143 (56.3…\n#>  4 \"  Male\"         \"33 (38.4%… \"44 (52.4%)\"       \"34 (40.5%)\"      \"111 (43.7…\n#>  5 \"Age\"            \"\"          \"\"                 \"\"                \"\"         \n#>  6 \"  Mean (SD)\"    \"75.2 (8.5… \"74.4 (7.89)\"      \"75.7 (8.29)\"     \"75.1 (8.2…\n#>  7 \"  Median [Min,… \"76.0 [52.… \"76.0 [56.0, 88.0… \"77.5 [51.0, 88.… \"77.0 [51.…\n#>  8 \"RACE\"           \"\"          \"\"                 \"\"                \"\"         \n#>  9 \"  Black or Afr… \"8 (9.3%)\"  \"9 (10.7%)\"        \"6 (7.1%)\"        \"23 (9.1%)\"\n#> 10 \"  White\"        \"78 (90.7%… \"74 (88.1%)\"       \"78 (92.9%)\"      \"230 (90.6…\n#> 11 \"  American Ind… \"0 (0%)\"    \"1 (1.2%)\"         \"0 (0%)\"          \"1 (0.4%)\"\ncolheader1 <- paste(names(tbl_base), collapse = \"|\")\ncolheader2 <- paste(tbl_base[1, ], collapse = \"|\")\nrel_width <- c(2.5, rep(1, 4))\n\ntbl_base[-1, ] %>%\n  rtf_title(\n    \"Baseline Characteristics of Participants\",\n    \"(All Participants Randomized)\"\n  ) %>%\n  rtf_colheader(colheader1,\n    col_rel_width = rel_width\n  ) %>%\n  rtf_colheader(colheader2,\n    border_top = \"\",\n    col_rel_width = rel_width\n  ) %>%\n  rtf_body(\n    col_rel_width = rel_width,\n    text_justification = c(\"l\", rep(\"c\", 4)),\n    text_indent_first = -240,\n    text_indent_left = 180\n  ) %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_base.rtf\")"},{"path":"efficacy-table.html","id":"efficacy-table","chapter":"5 Efficacy table","heading":"5 Efficacy table","text":"Following ICH E3 guidance,\nprimary secondary efficacy endpoints need summarized\nSection 11.4, Efficacy Results Tabulations Individual Participant.chapter, illustrate generate efficacy table study.\nefficacy analysis, change baseline glucose data week 24 analyzed.","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nlibrary(emmeans) # LS mean estimation"},{"path":"efficacy-table.html","id":"analysis-dataset","chapter":"5 Efficacy table","heading":"5.1 Analysis dataset","text":"prepare analysis, adsl adlbc datasets required.First, population data scope selected.\nanalysis done efficacy population, identified EFFFL == \"Y\", \nrecords post baseline (AVISITN >= 1) Week 24 (AVISITN <= 24).\nvariable AVISITN numerical analysis visit.\nexample, analysis visit recorded “Baseline” (.e., AVISIT = Baseline),\nAVISITN = 0;\nanalysis visit recorded “Week 24” (.e., AVISIT = Week 24), AVISITN = 24;\nanalysis visit blank, AVISITN also blank.\ndiscuss missing values Section 6.4.first records analysis dataset.AVAL: analysis valueBASE: baseline valueCHG: change baseline","code":"\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nadlb <- read_sas(\"data-adam/adlbc.sas7bdat\")\ngluc <- adlb %>%\n  left_join(adsl %>% select(USUBJID, EFFFL), by = \"USUBJID\") %>%\n  # PARAMCD is parameter code and here we focus on Glucose (mg/dL)\n  filter(EFFFL == \"Y\" & PARAMCD == \"GLUC\") %>%\n  arrange(TRTPN) %>%\n  mutate(TRTP = factor(TRTP, levels = unique(TRTP)))\n\nana <- gluc %>%\n  filter(AVISITN > 0 & AVISITN <= 24) %>%\n  arrange(AVISITN) %>%\n  mutate(AVISIT = factor(AVISIT, levels = unique(AVISIT)))\nana %>%\n  select(USUBJID, TRTPN, AVISIT, AVAL, BASE, CHG) %>%\n  head(4)#> # A tibble: 4 × 6\n#>   USUBJID     TRTPN AVISIT              AVAL  BASE     CHG\n#>   <chr>       <dbl> <fct>              <dbl> <dbl>   <dbl>\n#> 1 01-701-1015     0 \"          Week 2\"  4.66  4.72 -0.0555\n#> 2 01-701-1023     0 \"          Week 2\"  5.77  5.33  0.444 \n#> 3 01-701-1047     0 \"          Week 2\"  5.55  5.55  0     \n#> 4 01-701-1118     0 \"          Week 2\"  4.88  4.05  0.833"},{"path":"efficacy-table.html","id":"helper-functions-1","chapter":"5 Efficacy table","heading":"5.2 Helper functions","text":"prepare report, create helper functions\nusing fmt_num() function defined Chapter 3.Format estimatorsFormat confidence intervalFormat p-value","code":"\nfmt_est <- function(.mean,\n                    .sd,\n                    digits = c(1, 2)) {\n  .mean <- fmt_num(.mean, digits[1], width = digits[1] + 4)\n  .sd <- fmt_num(.sd, digits[2], width = digits[2] + 3)\n  paste0(.mean, \" (\", .sd, \")\")\n}\nfmt_ci <- function(.est,\n                   .lower,\n                   .upper,\n                   digits = 2,\n                   width = digits + 3) {\n  .est <- fmt_num(.est, digits, width)\n  .lower <- fmt_num(.lower, digits, width)\n  .upper <- fmt_num(.upper, digits, width)\n  paste0(.est, \" (\", .lower, \",\", .upper, \")\")\n}\nfmt_pval <- function(.p, digits = 3) {\n  scale <- 10^(-1 * digits)\n  p_scale <- paste0(\"<\", digits)\n  if_else(.p < scale, p_scale, fmt_num(.p, digits = digits))\n}"},{"path":"efficacy-table.html","id":"summary-of-observed-data","chapter":"5 Efficacy table","heading":"5.3 Summary of observed data","text":"First observed data Baseline Week 24 summarized using code :Also observed change baseline glucose Week 24 summarized using code :","code":"\nt11 <- gluc %>%\n  filter(AVISITN %in% c(0, 24)) %>%\n  group_by(TRTPN, TRTP, AVISITN) %>%\n  summarise(\n    n = n(),\n    mean_sd = fmt_est(mean(AVAL), sd(AVAL))\n  ) %>%\n  pivot_wider(\n    id_cols = c(TRTP, TRTPN),\n    names_from = AVISITN,\n    values_from = c(n, mean_sd)\n  )\n\nt11#> # A tibble: 3 × 6\n#> # Groups:   TRTPN, TRTP [3]\n#>   TRTP                 TRTPN   n_0  n_24 mean_sd_0       mean_sd_24     \n#>   <fct>                <dbl> <int> <int> <chr>           <chr>          \n#> 1 Placebo                  0    79    57 \"  5.7 ( 2.23)\" \"  5.7 ( 1.83)\"\n#> 2 Xanomeline Low Dose     54    79    26 \"  5.4 ( 0.95)\" \"  5.7 ( 1.26)\"\n#> 3 Xanomeline High Dose    81    74    30 \"  5.4 ( 1.37)\" \"  6.0 ( 1.92)\"\nt12 <- gluc %>%\n  filter(AVISITN %in% 24) %>%\n  group_by(TRTPN, AVISITN) %>%\n  summarise(\n    n_chg = n(),\n    mean_chg = fmt_est(\n      mean(CHG, na.rm = TRUE),\n      sd(CHG, na.rm = TRUE)\n    )\n  )\n\nt12#> # A tibble: 3 × 4\n#> # Groups:   TRTPN [3]\n#>   TRTPN AVISITN n_chg mean_chg       \n#>   <dbl>   <dbl> <int> <chr>          \n#> 1     0      24    57 \" -0.1 ( 2.68)\"\n#> 2    54      24    26 \"  0.2 ( 0.82)\"\n#> 3    81      24    30 \"  0.5 ( 1.94)\""},{"path":"efficacy-table.html","id":"missing-data-imputation","chapter":"5 Efficacy table","heading":"5.4 Missing data imputation","text":"clinical trials, missing data inevitable.\nstudy, missing values glucose data.simplicity illustration purpose,\nuse last observation carried forward (LOCF) approach handle missing data.\nLOCF approach single imputation approach recommended\nreal application.\nInterested readers can find discussion missing data approaches book:\nPrevention Treatment Missing Data Clinical Trials.","code":"\ncount(ana, AVISIT)#> # A tibble: 8 × 2\n#>   AVISIT                 n\n#>   <fct>              <int>\n#> 1 \"          Week 2\"   229\n#> 2 \"          Week 4\"   211\n#> 3 \"          Week 6\"   197\n#> 4 \"          Week 8\"   187\n#> 5 \"         Week 12\"   167\n#> 6 \"         Week 16\"   147\n#> 7 \"         Week 20\"   126\n#> 8 \"         Week 24\"   113\nana_locf <- ana %>%\n  group_by(USUBJID) %>%\n  mutate(locf = AVISITN == max(AVISITN)) %>%\n  filter(locf)"},{"path":"efficacy-table.html","id":"ancova-model","chapter":"5 Efficacy table","heading":"5.5 ANCOVA model","text":"imputed data analyzed using ANCOVA model treatment baseline glucose covariates.emmeans R package used obtain\nwithin group least square (LS) mean","code":"\nfit <- lm(CHG ~ BASE + TRTP, data = ana_locf)\nsummary(fit)#> \n#> Call:\n#> lm(formula = CHG ~ BASE + TRTP, data = ana_locf)\n#> \n#> Residuals:\n#>     Min      1Q  Median      3Q     Max \n#> -6.9907 -0.7195 -0.2367  0.2422  7.0754 \n#> \n#> Coefficients:\n#>                          Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)               3.00836    0.39392   7.637 6.23e-13 ***\n#> BASE                     -0.53483    0.06267  -8.535 2.06e-15 ***\n#> TRTPXanomeline Low Dose  -0.17367    0.24421  -0.711    0.478    \n#> TRTPXanomeline High Dose  0.32983    0.24846   1.327    0.186    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 1.527 on 226 degrees of freedom\n#>   (2 observations deleted due to missingness)\n#> Multiple R-squared:  0.2567, Adjusted R-squared:  0.2468 \n#> F-statistic: 26.01 on 3 and 226 DF,  p-value: 1.714e-14\nfit_within <- emmeans(fit, \"TRTP\")\nfit_within#>  TRTP                  emmean    SE  df lower.CL upper.CL\n#>  Placebo               0.0676 0.172 226   -0.272    0.407\n#>  Xanomeline Low Dose  -0.1060 0.173 226   -0.447    0.235\n#>  Xanomeline High Dose  0.3975 0.179 226    0.045    0.750\n#> \n#> Confidence level used: 0.95\nt13 <- fit_within %>%\n  as_tibble() %>%\n  mutate(ls = fmt_ci(emmean, lower.CL, upper.CL)) %>%\n  select(TRTP, ls)\nt13#> # A tibble: 3 × 2\n#>   TRTP                 ls                   \n#>   <fct>                <chr>                \n#> 1 Placebo              \" 0.07 (-0.27, 0.41)\"\n#> 2 Xanomeline Low Dose  \"-0.11 (-0.45, 0.23)\"\n#> 3 Xanomeline High Dose \" 0.40 ( 0.05, 0.75)\"\nfit_between <- pairs(fit_within, reverse = TRUE)\nfit_between#>  contrast                                   estimate    SE  df t.ratio p.value\n#>  Xanomeline Low Dose - Placebo                -0.174 0.244 226  -0.711  0.7571\n#>  Xanomeline High Dose - Placebo                0.330 0.248 226   1.327  0.3814\n#>  Xanomeline High Dose - Xanomeline Low Dose    0.504 0.249 226   2.024  0.1087\n#> \n#> P value adjustment: tukey method for comparing a family of 3 estimates\nt2 <- fit_between %>%\n  as_tibble() %>%\n  mutate(\n    ls = fmt_ci(\n      estimate,\n      estimate - 1.96 * SE,\n      estimate + 1.96 * SE\n    ),\n    p = fmt_pval(p.value)\n  ) %>%\n  filter(str_detect(contrast, \"- Placebo\")) %>%\n  select(contrast, ls, p)\n\nt2#> # A tibble: 2 × 3\n#>   contrast                       ls                    p        \n#>   <chr>                          <chr>                 <chr>    \n#> 1 Xanomeline Low Dose - Placebo  \"-0.17 (-0.65, 0.30)\" \"  0.757\"\n#> 2 Xanomeline High Dose - Placebo \" 0.33 (-0.16, 0.82)\" \"  0.381\""},{"path":"efficacy-table.html","id":"reporting","chapter":"5 Efficacy table","heading":"5.6 Reporting","text":"t11, t12 t13 combined get first part report tableThen r2rtf used prepare table format t1.\nalso highlight handle special characters example.Special characters ^ _ used define superscript subscript text. {} define part impacted.\nexample, {^} provides superscript footnote notation.\nr2rtf also supports LaTeX characters.\nExamples can found \nr2rtf get started page.\ntext_convert argument r2rtf_*() functions controls whether convert special characters.also use r2rtf prepare table format t2Finally, combine two parts get final table using r2rtf.\nachieved providing list t1_rtf t2_rtf input \nrtf_encode.conclusion, procedure generate efficacy results table summarized follows.Step 1: Read data (.e., adsl adlb) R.Step 2: Define analysis dataset. example, define two analysis datasets. first dataset efficacy population (gluc). second dataset collection records post baseline week 24 (ana).Step 3: Impute missing values. example, name ana dataset imputation ana_locf.Step 4: Calculate mean standard derivation efficacy endpoint (.e., gluc), format RTF table.Step 5: Calculate pairwise comparison ANCOVA model, format RTF table.Step 6: Combine outputs steps 4 5 rows.","code":"\nt1 <- cbind(\n  t11 %>% ungroup() %>% select(TRTP, ends_with(\"0\"), ends_with(\"24\")),\n  t12 %>% ungroup() %>% select(ends_with(\"chg\")),\n  t13 %>% ungroup() %>% select(ls)\n)\nt1#>                   TRTP n_0     mean_sd_0 n_24    mean_sd_24 n_chg      mean_chg\n#> 1              Placebo  79   5.7 ( 2.23)   57   5.7 ( 1.83)    57  -0.1 ( 2.68)\n#> 2  Xanomeline Low Dose  79   5.4 ( 0.95)   26   5.7 ( 1.26)    26   0.2 ( 0.82)\n#> 3 Xanomeline High Dose  74   5.4 ( 1.37)   30   6.0 ( 1.92)    30   0.5 ( 1.94)\n#>                    ls\n#> 1  0.07 (-0.27, 0.41)\n#> 2 -0.11 (-0.45, 0.23)\n#> 3  0.40 ( 0.05, 0.75)\nt1_rtf <- t1 %>%\n  data.frame() %>%\n  rtf_title(c(\n    \"ANCOVA of Change from Baseline Glucose (mmol/L) at Week 24\",\n    \"LOCF\",\n    \"Efficacy Analysis Population\"\n  )) %>%\n  rtf_colheader(\"| Baseline | Week 24 | Change from Baseline\",\n    col_rel_width = c(2.5, 2, 2, 4)\n  ) %>%\n  rtf_colheader(paste(\n    \"Treatment |\",\n    paste0(rep(\"N | Mean (SD) | \", 3), collapse = \"\"),\n    \"LS Mean (95% CI){^a}\"\n  ),\n  col_rel_width = c(2.5, rep(c(0.5, 1.5), 3), 2)\n  ) %>%\n  rtf_body(\n    text_justification = c(\"l\", rep(\"c\", 7)),\n    col_rel_width = c(2.5, rep(c(0.5, 1.5), 3), 2)\n  ) %>%\n  rtf_footnote(c(\n    \"{^a}Based on an ANCOVA model after adjusting baseline value. LOCF approach is used to impute missing values.\",\n    \"ANCOVA = Analysis of Covariance, LOCF = Last Observation Carried Forward\",\n    \"CI = Confidence Interval, LS = Least Squares, SD = Standard Deviation\"\n  ))\n\nt1_rtf %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_eff1.rtf\")\nt2_rtf <- t2 %>%\n  data.frame() %>%\n  rtf_colheader(\"Pairwise Comparison | Difference in LS Mean (95% CI){^a} | p-Value\",\n    col_rel_width = c(4.5, 4, 2)\n  ) %>%\n  rtf_body(\n    text_justification = c(\"l\", \"c\", \"c\"),\n    col_rel_width = c(4.5, 4, 2)\n  )\n\nt2_rtf %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_eff2.rtf\")\nlist(t1_rtf, t2_rtf) %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_eff.rtf\")"},{"path":"efficacy-figure.html","id":"efficacy-figure","chapter":"6 Efficacy figure","heading":"6 Efficacy figure","text":"Following ICH E3 guidance,\nprimary secondary efficacy endpoints need summarized\nSection 11.4, Efficacy Results Tabulations Individual Participant.chapter, illustrate create Kaplan-Meier plot study.\nsurvival analysis efficacy, time dermatologic event (TTDE) analyzed.","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nlibrary(survival) # Fit survival model\nlibrary(survminer) # K-M plot with risk table\nlibrary(forcats) # Reorder ordinal variable level based on preference"},{"path":"efficacy-figure.html","id":"analysis-dataset-1","chapter":"6 Efficacy figure","heading":"6.1 Analysis dataset","text":"prepare analysis, adtte dataset required.First, prepare analysis ready data,\nfilter records efficacy endpoint time event interest (TTDE)\nusing PARAMCD (PARAM, PRAMN), select survival analysis related variables:TRTP: treatment arm: (using corresponding numeric code TRTAN re-order levels, “Placebo” reference level)AVAL: time--event analysis valueCNSR: event (censoring) status","code":"\nadtte <- read_sas(\"data-adam/adtte.sas7bdat\")\nadtte_ttde <- adtte %>%\n  filter(PARAMCD == \"TTDE\") %>%\n  select(TRTP, TRTAN, AVAL, CNSR) %>%\n  mutate(TRTP = forcats::fct_reorder(TRTP, TRTAN)) # Recorder levels"},{"path":"efficacy-figure.html","id":"create-kaplan-meier-curve","chapter":"6 Efficacy figure","heading":"6.2 Create Kaplan-Meier curve","text":"survival package used create curve data points,\nsurvminer package can used plot K-M curve elegant ggplot2 style.\ntons customized options users create K-M plot\nrisk table testing result (nominal p-value).\ndetails can found ?survminer::ggsurvplot.Users can use Surv() formula directly,\nuse fitted Cox model coxph() function\nalso want obtain information, .e. hazard ratio, survival rates, etc.\ncan save figure .png file,\nuse r2rtf package create formatted RTF figure.\ndetails can found https://merck.github.io/r2rtf/articles/example-figure.html.conclusion, procedure generate efficacy K-M plot summarized follows.Step 1: Read data adtte R.Step 2: Define analysis-ready dataset. example, define analysis dataset TTDE endpoint adtte_ttde.Step 3: Create curve’s data points using Surv() formula directly\nfitted survival models beforehand. plot customize K-M curve risk table using survminer package.Step 4: Save output PNG file, format RTF table.","code":"\nfit <- survfit(Surv(AVAL, 1 - CNSR) ~ TRTP, data = adtte_ttde)\nfig_km <- ggsurvplot(\n  fit,\n  xlab = \"Time in Months\",\n  ylab = \"Survival Probability\",\n  break.time.by = 30.4367,\n  xscale = \"d_m\",\n  xlim = c(0, 200),\n  linetype = c(1, 2, 3),\n  risk.table = TRUE,\n  risk.table.height = 0.3, # Useful when you have multiple groups\n  legend = c(0.8, 0.9), legend.title = \"\",\n  legend.labs = sort(unique(adtte_ttde$TRTP)),\n  censor.size = 4,\n  size = 0.8,\n  title = \"\",\n  censor.shape = \"|\",\n  pval = TRUE,\n  pval.method = TRUE,\n  pval.coord = c(0, 0.1),\n  pval.method.coord = c(0, 0.2),\n  pval.size = 5,\n  ggtheme = theme_classic2(base_family = \"Times New Roman\", base_size = 18)\n)\n# Save as PNG file\nggsave(\"tlf/fig_km.png\", plot = print(fig_km, newpage = FALSE), width = 10, height = 6)\n# Create RTF figure\nrtf_read_png(\"tlf/fig_km.png\") %>% # Read PNG files from the file path\n  rtf_title(\"Time to Dermatologic Event by Treatment Group\", \"All Participants\") %>% # Add title or subtitle\n  rtf_footnote(\"footnote\") %>% # Add footnote\n  rtf_source(\"[datasource: adam-adtte]\") %>% # Add data source\n  rtf_figure(fig_width = 6, fig_height = 3.6) %>% # Set proportional figure size to the original PNG figure size\n  rtf_encode(doc_type = \"figure\") %>% # Encode rtf as figure\n  write_rtf(file = \"tlf/fig_km.rtf\")"},{"path":"aesummary.html","id":"aesummary","chapter":"7 AE summary","heading":"7 AE summary","text":"Following ICH E3 guidance,\nneed number participants included safety analysis Section 12.2, Adverse Events (AEs).chapter, illustrate summarize AEs information study.data used summarize AE information adsl adae datasets.first summarize participants population treatment arm.transform data simplify analysis required AE criteria interest.one adverse eventsWith drug-related adverse eventsWith serious adverse eventsWith serious drug-related adverse eventsWho diedWe summarize number percentage participants meet AE criteria.prepare reporting-ready dataset AE group.prepare reporting-ready dataset analysis population.final report data saved tbl_ae_summary.define format output using code :procedure generate AE summary table can summarized follows:Step 1: Read data (.e., adae adsl) R.Step 2: Summarize participants population treatment arm, name dataset t_pop.Step 3: Summarize participants population required AE criteria interest,\nname dataset t_ae.Step 4: Row-wise combine t_pop t_ae format using r2rtf.","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nadae <- read_sas(\"data-adam/adae.sas7bdat\")\npop <- adsl %>%\n  filter(SAFFL == \"Y\") %>%\n  rename(TRTAN = TRT01AN) %>%\n  count(TRTAN, name = \"tot\")\n\npop#> # A tibble: 3 × 2\n#>   TRTAN   tot\n#>   <dbl> <int>\n#> 1     0    86\n#> 2    54    84\n#> 3    81    84\ntidy_ae <- adae %>%\n  mutate(\n    all = SAFFL == \"Y\",\n    drug = AEREL %in% c(\"POSSIBLE\", \"PROBABLE\"),\n    ser = AESER == \"Y\",\n    drug_ser = drug & ser,\n    die = AEOUT == \"FATAL\"\n  ) %>%\n  select(USUBJID, TRTAN, all, drug, ser, drug_ser, die) %>%\n  pivot_longer(cols = c(all, drug, ser, drug_ser, die))\n\ntidy_ae %>% head(4)#> # A tibble: 4 × 4\n#>   USUBJID     TRTAN name     value\n#>   <chr>       <dbl> <chr>    <lgl>\n#> 1 01-701-1015     0 all      TRUE \n#> 2 01-701-1015     0 drug     TRUE \n#> 3 01-701-1015     0 ser      FALSE\n#> 4 01-701-1015     0 drug_ser FALSE\nana <- tidy_ae %>%\n  filter(value == TRUE) %>%\n  group_by(TRTAN, name) %>%\n  summarise(n = n_distinct(USUBJID)) %>%\n  left_join(pop, by = \"TRTAN\") %>%\n  mutate(\n    pct = fmt_num(n / tot * 100, digits = 1),\n    n = fmt_num(n, digits = 0),\n    pct = paste0(\"(\", pct, \")\")\n  )\n\nana %>% head(4)#> # A tibble: 4 × 5\n#> # Groups:   TRTAN [2]\n#>   TRTAN name  n        tot pct    \n#>   <dbl> <chr> <chr>  <int> <chr>  \n#> 1     0 all   \"  69\"    86 ( 80.2)\n#> 2     0 die   \"   2\"    86 (  2.3)\n#> 3     0 drug  \"  44\"    86 ( 51.2)\n#> 4    54 all   \"  77\"    84 ( 91.7)\nt_ae <- ana %>%\n  pivot_wider(\n    id_cols = \"name\",\n    names_from = TRTAN,\n    values_from = c(n, pct),\n    values_fill = list(\n      n = \"   0\",\n      pct = \"(  0.0)\"\n    )\n  )\n\nt_ae <- t_ae %>%\n  mutate(name = factor(\n    name,\n    c(\"all\", \"drug\", \"ser\", \"drug_ser\", \"die\"),\n    c(\n      \"With one or more adverse events\",\n      \"With drug-related adverse events\",\n      \"With serious adverse events\",\n      \"With serious drug-related adverse events\",\n      \"Who died\"\n    )\n  )) %>%\n  arrange(name)\nt_pop <- pop %>%\n  mutate(\n    name = \"Participants in population\",\n    tot = fmt_num(tot, digits = 0)\n  ) %>%\n  pivot_wider(\n    id_cols = name,\n    names_from = TRTAN,\n    names_prefix = \"n_\",\n    values_from = tot\n  )\n\nt_pop#> # A tibble: 1 × 4\n#>   name                       n_0    n_54   n_81  \n#>   <chr>                      <chr>  <chr>  <chr> \n#> 1 Participants in population \"  86\" \"  84\" \"  84\"\ntbl_ae_summary <- bind_rows(t_pop, t_ae) %>%\n  select(name, ends_with(\"_0\"), ends_with(\"_54\"), ends_with(\"_81\"))\n\ntbl_ae_summary#> # A tibble: 6 × 7\n#>   name                                     n_0    pct_0 n_54  pct_54 n_81  pct_81\n#>   <chr>                                    <chr>  <chr> <chr> <chr>  <chr> <chr> \n#> 1 Participants in population               \"  86\" <NA>  \"  8… <NA>   \"  8… <NA>  \n#> 2 With one or more adverse events          \"  69\" ( 80… \"  7… ( 91.… \"  7… ( 94.…\n#> 3 With drug-related adverse events         \"  44\" ( 51… \"  7… ( 86.… \"  7… ( 83.…\n#> 4 With serious adverse events              \"   0\" (  0… \"   … (  1.… \"   … (  2.…\n#> 5 With serious drug-related adverse events \"   0\" (  0… \"   … (  1.… \"   … (  1.…\n#> 6 Who died                                 \"   2\" (  2… \"   … (  1.… \"   … (  0.…\ntbl_ae_summary %>%\n  rtf_title(\n    \"Analysis of Adverse Event Summary\",\n    \"(Safety Analysis Population)\"\n  ) %>%\n  rtf_colheader(\" | Placebo | Xanomeline Low Dose| Xanomeline High Dose\",\n    col_rel_width = c(3.5, rep(2, 3))\n  ) %>%\n  rtf_colheader(\" | n | (%) | n | (%) | n | (%)\",\n    col_rel_width = c(3.5, rep(c(0.7, 1.3), 3)),\n    border_top = c(\"\", rep(\"single\", 6)),\n    border_left = c(\"single\", rep(c(\"single\", \"\"), 3))\n  ) %>%\n  rtf_body(\n    col_rel_width = c(3.5, rep(c(0.7, 1.3), 3)),\n    text_justification = c(\"l\", rep(\"c\", 6)),\n    border_left = c(\"single\", rep(c(\"single\", \"\"), 3))\n  ) %>%\n  rtf_footnote(\"Every subject is counted a single time for each applicable row and column.\") %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_ae_summary.rtf\")"},{"path":"specific-ae.html","id":"specific-ae","chapter":"8 Specific AE","heading":"8 Specific AE","text":"Following ICH E3 guidance,\nneed summarize number participants specific AE Section 12.2, Adverse Events (AEs).chapter, illustrate summarize simplified specific AE\ninformation study.data used summarize AE information adsl adae datasets.illustration purpose, provide counts simplified\ntable. percentage participants AE can \ncalculated shown Chapter 7., focus analysis script two advanced\nfeatures table layout.group content: AE can summarized multiple nested layers.\n(e.g., system organ class (SOC, AESOC) specific AE term\n(AEDECOD))pagenization: many AE terms can covered one\npage. Column headers SOC information need repeated \nevery page.code , count number participants AE term \nSOC treatment arm, create new variable order set \n0. variable order can help \ndata manipulation later.code , count number subjects AE term \nSOC, AE term, treatment arm. also create new variable\norder set 1.prepare reporting data AE information using code :prepare reporting data analysis population using code :final report data saved tbl_ae_spec.\nalso add blank row population AE information reporting table.define format output :obtain nested layout, use page_by argument \nrtf_body function. defining page_by=\"AESOC\", r2rtf recognizes\nvariable group indicator.setting pageby_row = \"first_row\", first row displayed \ngroup header. group information broken multiple pages,\ngroup header row repeated page default.can also customize text format providing matrix \ndimension input dataset (.e., tbl_ae_spec). code\n, illustrate display bold text group headers \nhighlight nested structure table layout.discussion page_by, group_by subline_by\nfeatures can found \nr2rtf package website.procedure generate baseline characteristics table can \nsummarized follows:Step 1: Read data (.e., adae adsl) R.Step 2: Count number participants SOC treatment arm\n(rows bold text) save t1.Step 3: Count number participants AE term SOC, AE\nterm, treatment arm (rows without bold text) save t2.Step 4: Bind t1 t2 row t_ae.Step 5: Count number participants arm t_pop.Step 6: Row-wise combine t_pop t_ae tbl_ae_spec.Step 7: Format output using r2rtf.","code":"\nlibrary(haven) # Read SAS data\nlibrary(dplyr) # Manipulate data\nlibrary(tidyr) # Manipulate data\nlibrary(r2rtf) # Reporting in RTF format\nadsl <- read_sas(\"data-adam/adsl.sas7bdat\")\nadae <- read_sas(\"data-adam/adae.sas7bdat\")\nana <- adae %>%\n  mutate(\n    AESOC = toTitleCase(tolower(AESOC)),\n    AEDECOD = toTitleCase(tolower(AEDECOD))\n  )\n\nt1 <- ana %>%\n  group_by(TRTAN, AESOC) %>%\n  summarise(n = fmt_num(n_distinct(USUBJID), digits = 0)) %>%\n  mutate(AEDECOD = AESOC, order = 0)\n\nt1 %>% head(4)#> # A tibble: 4 × 5\n#> # Groups:   TRTAN [1]\n#>   TRTAN AESOC                       n      AEDECOD                     order\n#>   <dbl> <chr>                       <chr>  <chr>                       <dbl>\n#> 1     0 Cardiac Disorders           \"  13\" Cardiac Disorders               0\n#> 2     0 Ear and Labyrinth Disorders \"   1\" Ear and Labyrinth Disorders     0\n#> 3     0 Eye Disorders               \"   4\" Eye Disorders                   0\n#> 4     0 Gastrointestinal Disorders  \"  17\" Gastrointestinal Disorders      0\nt2 <- ana %>%\n  group_by(TRTAN, AESOC, AEDECOD) %>%\n  summarise(n = fmt_num(n_distinct(USUBJID), digits = 0)) %>%\n  mutate(order = 1)\n\nt2 %>% head(4)#> # A tibble: 4 × 5\n#> # Groups:   TRTAN, AESOC [1]\n#>   TRTAN AESOC             AEDECOD                              n      order\n#>   <dbl> <chr>             <chr>                                <chr>  <dbl>\n#> 1     0 Cardiac Disorders Atrial Fibrillation                  \"   1\"     1\n#> 2     0 Cardiac Disorders Atrial Hypertrophy                   \"   1\"     1\n#> 3     0 Cardiac Disorders Atrioventricular Block First Degree  \"   1\"     1\n#> 4     0 Cardiac Disorders Atrioventricular Block Second Degree \"   2\"     1\nt_ae <- bind_rows(t1, t2) %>%\n  pivot_wider(\n    id_cols = c(AESOC, order, AEDECOD),\n    names_from = TRTAN,\n    names_prefix = \"n_\",\n    values_from = n,\n    values_fill = fmt_num(0, digits = 0)\n  ) %>%\n  arrange(AESOC, order, AEDECOD) %>%\n  select(AESOC, AEDECOD, starts_with(\"n\"))\n\nt_ae %>% head(4)#> # A tibble: 4 × 5\n#>   AESOC             AEDECOD             n_0    n_54   n_81  \n#>   <chr>             <chr>               <chr>  <chr>  <chr> \n#> 1 Cardiac Disorders Cardiac Disorders   \"  13\" \"  13\" \"  18\"\n#> 2 Cardiac Disorders Atrial Fibrillation \"   1\" \"   1\" \"   3\"\n#> 3 Cardiac Disorders Atrial Flutter      \"   0\" \"   1\" \"   1\"\n#> 4 Cardiac Disorders Atrial Hypertrophy  \"   1\" \"   0\" \"   0\"\nt_pop <- adsl %>%\n  filter(SAFFL == \"Y\") %>%\n  count_by(\"TRT01AN\", \"SAFFL\",\n    var_label = \"Participants in population\"\n  ) %>%\n  mutate(\n    AESOC = \"pop\",\n    AEDECOD = var_label\n  ) %>%\n  select(AESOC, AEDECOD, starts_with(\"n_\"))\n\nt_pop#> # A tibble: 1 × 5\n#>   AESOC AEDECOD                    n_0    n_54   n_81  \n#>   <chr> <chr>                      <chr>  <chr>  <chr> \n#> 1 pop   Participants in population \"  86\" \"  84\" \"  84\"\ntbl_ae_spec <- bind_rows(\n  t_pop,\n  data.frame(AESOC = \"pop\"),\n  t_ae\n) %>%\n  mutate(AEDECOD = ifelse(AEDECOD == AESOC,\n    AEDECOD, paste0(\"  \", AEDECOD)\n  ))\n\ntbl_ae_spec %>% head(4)#> # A tibble: 4 × 5\n#>   AESOC             AEDECOD                        n_0    n_54   n_81  \n#>   <chr>             <chr>                          <chr>  <chr>  <chr> \n#> 1 pop               \"  Participants in population\" \"  86\" \"  84\" \"  84\"\n#> 2 pop                <NA>                           <NA>   <NA>   <NA> \n#> 3 Cardiac Disorders \"Cardiac Disorders\"            \"  13\" \"  13\" \"  18\"\n#> 4 Cardiac Disorders \"  Atrial Fibrillation\"        \"   1\" \"   1\" \"   3\"\nn_row <- nrow(tbl_ae_spec)\nn_col <- ncol(tbl_ae_spec)\nid <- tbl_ae_spec$AESOC == tbl_ae_spec$AEDECOD\nid <- ifelse(is.na(id), FALSE, id)\n\ntext_format <- ifelse(id, \"b\", \"\")\ntbl_ae_spec %>%\n  rtf_title(\n    \"Analysis of Participants With Specific Adverse Events\",\n    \"(Safety Analysis Population)\"\n  ) %>%\n  rtf_colheader(\" | Placebo | Xanomeline Low Dose| Xanomeline High Dose\",\n    col_rel_width = c(3, rep(1, 3))\n  ) %>%\n  rtf_colheader(\" | n |  n | n \",\n    border_top = \"\",\n    border_bottom = \"single\",\n    col_rel_width = c(3, rep(1, 3))\n  ) %>%\n  rtf_body(\n    col_rel_width = c(1, 3, rep(1, 3)),\n    text_justification = c(\"l\", \"l\", rep(\"c\", 3)),\n    text_format = matrix(text_format, nrow = n_row, ncol = n_col),\n    page_by = \"AESOC\",\n    pageby_row = \"first_row\"\n  ) %>%\n  rtf_footnote(\"Every subject is counted a single time for each applicable row and column.\") %>%\n  rtf_encode() %>%\n  write_rtf(\"tlf/tlf_spec_ae.rtf\")"},{"path":"project-overview.html","id":"project-overview","chapter":"9 Overview","heading":"9 Overview","text":"late-stage clinical trial, number &R deliverables can easily hundreds.\norganization, common multiple ongoing clinical trials clinical program.deliver &R results clinical trial project,\nteamwork typically requires collaborations statisticians programmers.\npart, let’s consider organize clinical trial project &R lead.Chapter 10 discuss organize source code, documents, \ndeliverables &R clinical project.\nrecommend using R package folder structure.Chapter 11 discuss process system development lifecycle\nmanage &R clinical project.\nrecommend following agile management approach define, develop, validate, deliver work.","code":""},{"path":"folder.html","id":"folder","chapter":"10 Project folder","heading":"10 Project folder","text":"clearly defined clinical project folder structure can many benefits\nclinical development teams organization.\nSpecifically, well-defined project structure can achieve:Consistency: everyone works folder structure.Reproducibility: analysis can executed reproduced different\nteam members months/years later.Automation: automatically check integration project.Compliance: reduce compliance issues.use esubdemo R package \nillustrate project folder structure &R project. can\nclone\nproject using RStudio withFor R users, already benefit well-defined consistent folder structure.\nR package folder structure.\nEvery R package developer required follow convention organize\nR functions R package can disseminated Comprehensive R Archive Network (CRAN).\nuser, can easily install use R packages downloading CRAN.\nmany good resources guide developers R package development,\n, R Packages book Hadley Wickham.recommend using R package folder structure organize analysis scripts clinical trial development.\nUsing R package folder structure streamline data analysis work also proposed \n(see Marwick, Boettiger, Mullen (2018), Wu et al. (2021)).","code":"git clone https://github.com/elong0527/esubdemo.git"},{"path":"folder.html","id":"consistency","chapter":"10 Project folder","heading":"10.1 Consistency","text":"consistency, well-defined folder structure potential templates\nensures project teams organize &R work consistently across multiple projects.\nConsistent folder structure also reduces communication costs\nstudy team members enhances transparency projects.book, refer R package project-specific R package\npurpose R package organize analysis scripts clinical project.refer R package standard R package purpose R package \nshare commonly used R functions hosted code repository CRAN.minimal sufficient folders files project-specific R package\nbased R package folder structure.*.Rproj: RStudio project file used open RStudio project.DESCRIPTION: Metadata package including authors, license, dependencies, etc.R/: Project-specific R functions.vignettes/: Analysis scripts using R Markdown.man/: Manual project-specific R functions.general discussion R package folder structure can found\nChapter 4 R Packages book (Wickham (2015)).demonstrate idea using esubdemo project.esubdemo project, saved TLF generation scripts previous chapters vignettes/ folder.vignettes/ folder, two folders: adam/ tlf/.\nadam/ folder contains ADaM datasets.\ntlf/ folder contains output TLFs RTF format.\nput adam/ tlf/ folders within vignettes/ folder illustration purposes.\nactual &R report, may different location save input output.creating analysis scripts, also defined helper functions (e.g., fmt_num count_by).\nfunctions saved R/ folder.clinical trial project, also important provide proper documentation help functions.\nuse roxygen2 document functions.\nexample, header defines variable fmt_est.\ndetails can found Chapter 10 R Packages book.roxygen2 documentation converted \nstandard R documentation format, saved .Rd files man/ folder.\nstep automatically handled devtools::document().man/ folder used save documentation automatically generated roxygen2.\ntypical workflow add roxygen2 documentation function R/ folder.\ndevtools::document() used generate documentation files man/ folder.\ndetails can found Chapter 10 R Packages book.","code":"vignettes\n├── data-adam\n├── tlf\n├── tlf-01-disposition.Rmd\n├── tlf-02-population.Rmd\n├── tlf-03-baseline.Rmd\n├── tlf-04-efficacy.Rmd\n├── tlf-05-ae-summary.Rmd\n└── tlf-06-ae-spec.RmdR/\n├── count_by.R\n└── fmt.R\n#' Format point estimator\n#'\n#' @param .mean mean of an estimator.\n#' @param .sd sd of an estimator.\n#' @param digits number of digits for `.mean` and `.sd`.\n#'\n#' @export\nfmt_est <- function(.mean, .sd, digits = c(1, 2)) {\n  .mean <- fmt_num(.mean, digits[1], width = digits[1] + 4)\n  .sd <- fmt_num(.sd, digits[2], width = digits[2] + 3)\n  paste0(.mean, \" (\", .sd, \")\")\n}man\n├── count_by.Rd\n├── fmt_ci.Rd\n├── fmt_est.Rd\n├── fmt_num.Rd\n└── fmt_pval.Rd"},{"path":"folder.html","id":"reproduce","chapter":"10 Project folder","heading":"10.2 Reproducibility","text":"Reproducibility analysis one important aspects regulatory deliverables.\nensure successful reproduction, need controlled R environment,\nincluding control R version R package versions.\nusing R package folder structure proper tools (e.g., renv, packrat),\nillustrate achieve reproducibility R R package versions.level reproducibility SAS environments:\nhttps://support.sas.com/techsup/pcn/altopsys.html","code":""},{"path":"folder.html","id":"r-version","chapter":"10 Project folder","heading":"10.2.1 R version","text":"First, introduce control R version.\nesubdemo project, reproducible environment created open\nesubdemo.Rproj RStudio.\nopen esubdemo project, RStudio execute R code .Rprofile automatically.\ncan use .Rprofile set reproducible environment.\ndetails can found https://rstats.wtf/r-startup.html.\nopen esubdemo project, code .Rprofile \nautomatically check current R version defined .Rprofile.R version mismatch, error message displayed ..Rprofile project-specific R packages.\nstandard R package use .Rprofile.","code":"\n# Set project R version\nR_version <- \"4.1.1\"Error: The current R version is not the same as the current project in R4.1.1"},{"path":"folder.html","id":"r-package-version","chapter":"10 Project folder","heading":"10.2.2 R package version","text":"Next, introduce control R package version, controlled two layers.\nFirstly, define snapshot date .Rprofile.\nsnapshot date allows us freeze source code repository.can also define package repository specific snapshot date.\nexample, used Microsoft R Application Network (MRAN) \ndefine snapshot date 2021-08-06.\nsnapshot date freezes R package repository.words, R packages installed RStudio project\nbased frozen R version snapshot date.\n2021-08-06 using MRAN server.information displayed new R session opened.RStudio Package Manager (RSPM) provides solution host \npublicly available internally developed R packages.\nHowever, public RSPM server\nprovide daily snapshot MRAN .Secondly, use renv lock R package versions save renv.lock file.\nrenv provides robust stable approach managing R package versions\nproject-specific R packages.\nintroduction renv can found \nwebsite.R code .Rprofile initiates renv running environment.\nuser, can use renv::init(), renv::snapshot(), renv::restore()\ninitialize, save restore R packages used current analysis project.analysis project, renv package willcreate renv.lock file save state package versions.create renv/ folder manage R packages project.renv.lock file renv/ folder project-specific R package.\nstandard R package use renv.summary, R package version controlled two layers.Define snapshot date inst/startup.R.Using renv lock R versions within project.project initiated properly,\nable see similar messages inform control R package versions.R packages properly installed,\nsystem use R packages located search path\ndefined based order .libPaths().\nstartup message also provided R package search path.cloud-based R environment (e.g., RStudio Workbench)\ncan enhance reproducibility within organization\nusing operating system, R version, R package versions &R project.\ndetails can found https://environments.rstudio.com/.container solution like Docker (Nüst et al. 2020) enhance\nreproducibility across organization operating system level\nbeyond scope book.conclusion, achieve reproducibility project-specific R package,\nclinical project team can work controlled R environment\nR version R package versions defined repository snapshot date.","code":"\n# set up snapshot date\nsnapshot <- \"2021-08-06\"\n\n# set up repository based on the snapshot date\nrepos <- paste0(\"https://mran.microsoft.com/snapshot/\", snapshot)\n\n# define repo URL for project-specific package installation\noptions(repos = repos)Current project R package repository:\n    https://mran.microsoft.com/snapshot/2021-08-06\nsource(\"renv/activate.R\")* Project '~/esubdemo' loaded. [renv 0.14.0]Below R package path are searching in order to find installed R packages in this R session:\n    \"/home/zhanyilo/github-repo/esubdemo/renv/library/R-4.1/x86_64-pc-linux-gnu\"\n    \"/rtmp/RtmpT3ljoY/renv-system-library\""},{"path":"folder.html","id":"automation","chapter":"10 Project folder","heading":"10.3 Automation","text":"using R package folder structure, benefit many outstanding tools \nsimplify streamline workflow.learned functions devtools generate content automatically.\nlist tools can enhance workflow.devtools: make package development easier.\ngood overview can found Chapter 2 R Packages book.\ndevtools::load_all(): load functions R/ folder running environment.\ndevtools::document(): automatically create documentation using roxygen2.\ndevtools::check(): automatically perform compliance check R package.\ndevtools::build_site(): automatically run analysis scripts batch create pkgdown website.\ngood overview can found Chapter 2 R Packages book.devtools::load_all(): load functions R/ folder running environment.devtools::document(): automatically create documentation using roxygen2.devtools::check(): automatically perform compliance check R package.devtools::build_site(): automatically run analysis scripts batch create pkgdown website.usethis: automates repetitive tasks arise project setup development.testthat: streamline testing code.\ndiscussion using testthat &R project can found (Ginnaram et al. (2021)).\ndiscussion using testthat &R project can found (Ginnaram et al. (2021)).pkgdown: generate static HTML documentation website R package\nalso allows run analysis code batch.\nalso allows run analysis code batch.may automatically execute routines leveraging CI/CD workflow.\nexample, esubdemo project rerun required checks build pkgdown website\nusing Github Actions.consistent folder defined, also becomes easier create specific tools\nfit analysis reporting purpose. potential tools can helpful:Create project template using\nRStudio project templates;Add additional compliance checks analysis reporting;Save log files running batch.","code":""},{"path":"folder.html","id":"compliance","chapter":"10 Project folder","heading":"10.4 Compliance","text":"regulatory deliverable, important maintain compliance.\nconsistent folder structure, can define specific criteria compliance.\ncompliance criteria can implemented within automatically checking steps.R package, already criteria ensure R package integrity.\ndetails can found Chapter 19 R Packages book.","code":""},{"path":"manage.html","id":"manage","chapter":"11 Project management","heading":"11 Project management","text":"","code":""},{"path":"manage.html","id":"setting-up-for-success","chapter":"11 Project management","heading":"11.1 Setting up for success","text":"clinical data analysis project unlike typical data analysis projects software projects.\nTherefore, conventional wisdom tricks managing successful project also applicable .\ntime, clinical projects also unique traits,\nhigh standards planning, development, validation, delivery\nstrict time constraints.Although many factors determine project can execute efficiently,\nbelieve aspects critical long-term success,\nespecially managing clinical data analysis projects scale.","code":""},{"path":"manage.html","id":"work-as-a-team","chapter":"11 Project management","heading":"11.1.1 Work as a team","text":"general principle, team members involved project\ntake basic training project management understand work \ndevelopment team.\nFitzpatrick Collins-Sussman (2012) provides valuable tips topic.\nalways, setting clear goal following system development lifecycle\n(SDLC) essential.","code":""},{"path":"manage.html","id":"design-clean-code-architecture","chapter":"11 Project management","heading":"11.1.2 Design clean code architecture","text":"clean architecture design code improves project’s\nrobustness flexibility future changes.\nexample, understand separate business logic layers;\nknow created reusable components \nwritten one-analysis scripts; write low coupling, high cohesion code,\n.\nMartin, Grenning, Brown (2018) offers helpful insights topic.","code":""},{"path":"manage.html","id":"set-capability-boundaries","chapter":"11 Project management","heading":"11.1.3 Set capability boundaries","text":"Knowing can essential.\nCreate core capabilities list team.Sometimes, also critical understand .\nexample, hidden cost integrating external systems\ninvolving programming languages can prohibitively high.\nRemember, simple, robust solution almost always preferable \ncomplex solution requires high maintenance constant attention.","code":""},{"path":"manage.html","id":"contribute-to-the-community","chapter":"11 Project management","heading":"11.1.4 Contribute to the community","text":"Every individual limited way.\ncollective thinking community benefit project long term.\ndesigning reusable components, make plan share \ninternal communities, even better, open-source community.","code":""},{"path":"manage.html","id":"the-sdlc","chapter":"11 Project management","heading":"11.2 The SDLC","text":"&R deliverables clinical project development,\nclearly defined process system development lifecycle (SDLC)\ncrucial ensure regulatory compliance.SDLC &R deliverables can defined four stages.Planning: planning stage define scope project.Development: development stage implement target deliverables.Validation: validation stage verify target deliverables.Operation: operation stage deliver work stakeholders.Importantly, consider SDLC linear process.\nexample, study team identifies new requirement development validation stage,\nteam return planning stage discuss align scope.\nagile project management approach suitable\nrecommended &R clinical development project.\ngoal embrace iterative approach continuously improves target deliverables based \nfrequent stakeholder feedback.many good tools implement agile project management strategy, example:GitHub project boardJira","code":""},{"path":"manage.html","id":"planning","chapter":"11 Project management","heading":"11.3 Planning","text":"planning stage important SDLC lifecycle\nrequirements &R deliverables gathered documented.planning stage, project leader identify deliverables,\ne.g., list tables, listings, figures (TLFs).\nTLFs, team prepare necessary specifications:mock-tablesvalidation level (e.g., independent review double programming)etc.project leader also align work assignments team members.\npurpose answer question “?”project lead also set project folder, discussed Chapter 10.\nproject initiation can simplified creating \nRStudio project template.enable reproducibility, project leader also review startup file\n(.e. .Rprofile discussed Section 10.2) define:R versionRepository R packages snapshot dateProject package library pathetc.project initiation, modifying .Rprofile risk reproducibility\nhandled carefully necessary.","code":""},{"path":"manage.html","id":"development","chapter":"11 Project management","heading":"11.4 Development","text":"project initiated, study team starts develop TLFs based \npre-defined mock-tables assigned team member.analysis code relevant description can saved R Markdown files\nvignettes/ folder.use R Markdown allows developers assemble narrative text, code, \ncomments one place simplify documentation.\nhelpful create template define name convention TLFs deliverables.\nexample, can use tlf_ prefix filename indicate R Markdown file delivering TLFs.\nMultiple TLFs similar designs can included one R Markdown file.example, esubdemo project, six R Markdown files create TLFs.project-specific R functions need developed,\nR functions can placed R/ folder discussed Section 10.1.","code":""},{"path":"manage.html","id":"validation","chapter":"11 Project management","heading":"11.5 Validation","text":"Validation crucial stage ensure deliverables accurate consistent.\ndevelopment stage completed, project team needs validate deliverables, including R Markdown\nfiles TLFs deliverables project-specific R functions.\nlevel validation determined define stage.R package development, validation testing completed test/ folder.\ntestthat R package can used streamline validation process.\ndetails testthat package R package validation can found Chapter 12 R package book.recommended name convention indicate type validation.\nexample, can use test-developer-test, test-independent-test, test-double-programming\nclassify validation type.recommended follow organization\nfiles testthat folder R/ folder vignettes/ folder.\nEvery single file R/ folder vignettes/ folder testing file saved \ntests/testthat/ folder validate content.example, esubdemo project, can list testing files .validate content table, can save last datasets ready table generation .Rdata file.\nvalidator can reproduce TLF compare original result saved .Rdata file.\ntest passed results match.\nCustomers can directly review formatting TLFs comparing mock-.validate figure, can use snapshot testing strategy.validator completes testing project-specific functions R Markdown files,\nprocess execute report testing results standard R package.\ndevtools::test() function automatically executes testing cases summarizes testing results report.completing validation, validator updates status validation tracker.\nproject lead reviews tracking sheet make sure required activities SDLC completed,\ntracking sheet filled correctly.\ndeliverables ready customer review validation steps completed.\nchanges output requested customers documented.","code":"tests/testthat\n├── test-independent-test-tlf-01-disposition.R\n├── test-independent-test-tlf-02-population.R\n├── test-independent-test-tlf-03-baseline.R\n├── test-independent-test-tlf-04-efficacy.R\n├── test-independent-test-tlf-05-ae-summary.R\n├── test-independent-test-tlf-06-ae-spec.R\n└── test-independent-test-fmt.R"},{"path":"manage.html","id":"operation","chapter":"11 Project management","heading":"11.6 Operation","text":"completion development required validation &R deliverables,\nproject lead runs compliance checks project-specific R package similar R packages.\ndevtools::check() convenient way run compliance checks R CMD check.\nR CMD check automated check contents R package\nfrequently encountered issues submission CRAN.\nSince project-specific R package submitted CRAN, checks can customized skipped devtools::check().\nproject lead work study team ensure\nreported errors, warnings, notes devtools::check() fixed.project lead can also use R package pkgdown build complete website project-specific R package.\npkgdown website convenient way run analyses batch \nintegrate outputs website, comprehensively covers\nproject-specific R functions, TLF generation programs, outputs validation tracking information, etc.\nexample, esubdemo project, created pkgdown website https://elong0527.github.io/esubdemo/.Many tasks SDLC can completed automatically.\norganization can leverage CI/CD workflow automatically enable tasks,\nrunning testing cases creating pkgdown website.\nexample, esubdemo project, set \nGitHub Actions\n. can done using usethis::use_github_action().","code":""},{"path":"submission-overview.html","id":"submission-overview","chapter":"12 Overview","heading":"12 Overview","text":"electronic Common Technical Document (eCTD) standard format \nelectronic submission applications, amendments, supplements,\nreports applicant regulator.\neCTD offers solution submit documents stored \nstandard directory structure, file integrity validation\nmechanisms place.submit TLFs created R regulatory agencies, follow\nspirit existing eCTD submission guidelines prepare\ndeliverables, provide essential details relevant\ndocuments review.goal following two chapters provide guidance follow\nSection 4.1.2.10 \nFDA Study Data Technical Conformance Guide:“Sponsors provide software programs used create ADaM\ndatasets generate tables figures associated primary \nsecondary efficacy analyses. Furthermore, sponsors submit software\nprograms used generate additional information included Section 14\nCLINICAL STUDIES Prescribing Information (PI)26 applicable.\nspecific software utilized specified ADRG.\nmain purpose requesting submission programs\nunderstand process variables respective\nanalyses created confirm analysis algorithms.\nSponsors submit software programs ASCII text format;\nhowever, executable file extensions used.”Chapter 13 focus preparing\nproprietary R packages analysis code proper\nformats submission.Chapter 14 discuss\nrecommendations make R code running environment\nreproducible dry run tests reviews.","code":""},{"path":"submission-package.html","id":"submission-package","chapter":"13 Submission package","heading":"13 Submission package","text":"chapter, first give high-level overview \nassets eCTD submission package focus \nsubmitting R code.\n, discuss prepare proprietary R packages\n(), make part submission package.\nend, provide reusable templates updating\nAnalysis Data Reviewer’s Guide (ADRG) Analysis Results Metadata (ARM)\nreviewers receive proper instructions reproduce \nanalysis results.","code":""},{"path":"submission-package.html","id":"prerequisites","chapter":"13 Submission package","heading":"13.1 Prerequisites","text":"chapter uses pkglite convert R source packages\ntext files back.demo project (R package) prepare submission called\nesubdemo, available GitHub.\ncan download clone :demo submission package (confused R package )\nectddemo, also available GitHub.\ncan download clone :assume paths two folders esubdemo/ ectddemo/ .","code":"\ninstall.packages(\"pkglite\")git clone https://github.com/elong0527/esubdemo.gitgit clone https://github.com/elong0527/ectddemo.git"},{"path":"submission-package.html","id":"the-whole-game","chapter":"13 Submission package","heading":"13.2 The whole game","text":"eCTD deliverable, analysis dataset source code saved\neCTD module 5 (clinical study reports) folderThe files two directories within adam/ folder\ncritical documenting analysis using R: datasets/ programs/.special considerations component listed .","code":"ectddemo/m5/datasets/<study>/analysis/adam/ectddemo/m5/datasets/ectddemo/analysis/adam/\n├── datasets\n│   ├── adae.xpt\n│   ├── ...\n│   ├── adrg.pdf\n│   ├── analysis-results-metadata.pdf\n│   ├── define.xml\n│   └── define2-0-0.xsl\n└── programs\n    ├── r0pkgs.txt\n    ├── tlf-01-disposition.txt\n    ├── tlf-02-population.txt\n    ├── tlf-03-baseline.txt\n    ├── tlf-04-efficacy.txt\n    ├── tlf-05-ae-summary.txt\n    └── tlf-06-ae-spec.txt"},{"path":"submission-package.html","id":"datasets-1","chapter":"13 Submission package","heading":"13.2.1 datasets","text":"Folder path: ectddemo/m5/datasets/ectddemo/analysis/adam/datasets/.ADaM data .xpt format: created SAS R.define.xml: created Pinnacle 21.ADRG (Analysis Data Reviewer’s Guide)\n“Macro Programs” section: provide R R package versions snapshot date.\nAppendix: provide step--step instructions reviewers \nreproduce running environment rerun analyses.\n“Macro Programs” section: provide R R package versions snapshot date.Appendix: provide step--step instructions reviewers \nreproduce running environment rerun analyses.ARM (Analysis Results Metadata): provide links TLFs \nanalysis programs tables.","code":""},{"path":"submission-package.html","id":"programs","chapter":"13 Submission package","heading":"13.2.2 programs","text":"Folder path: ectddemo/m5/datasets/ectddemo/analysis/adam/programs/.r0pkgs.txt: contains internally developed proprietary R packages..txt files: contains R code specific analysis.","code":""},{"path":"submission-package.html","id":"notes","chapter":"13 Submission package","heading":"13.2.3 Notes","text":"verify submission package works, rerun analyses following \ninstructions defined ADRG.things need paid attention order pass compliance checks:file names programs/ lower case letters\n(underscores special characters)..txt files contain ASCII characters.\ncan verified pkglite::verify_ascii().docx files converted PDF files formal submission.Now general idea relevant components \nsubmission package.\nprepare proprietary R packages following sections.","code":""},{"path":"submission-package.html","id":"practical-considerations-for-r-package-submissions","chapter":"13 Submission package","heading":"13.3 Practical considerations for R package submissions","text":"start, aspects figure order\naccurately identify R packages submission.","code":""},{"path":"submission-package.html","id":"source-location","chapter":"13 Submission package","heading":"13.3.1 Source location","text":"common places host R (source) packages:CRANPublic Git repositoryPrivate Git repository (accessible externally)Private Git repository (inaccessible externally)R packages hosted CRAN public Git repository,\nprobably need submit part submission package,\nreviewers can install directly following instructions ADRG.R packages hosted private repositories, avoid complications\ninfrastructure, authentication, communication, often\nrecommended submit part submission package.","code":""},{"path":"submission-package.html","id":"dependency-locations","chapter":"13 Submission package","heading":"13.3.2 Dependency locations","text":"R package dependency another major factor consider\npreparing proprietary R package submission.dependencies available CRAN public Git repositories,\ncan declare directly using regular Imports Suggests\nsyntax \nremotes dependency syntax DESCRIPTION file.dependencies hosted private Git repositories, pack \nprimary R package(s) want submit,\npkglite supports packing multiple R packages single text file;\nrestore install order packed.","code":""},{"path":"submission-package.html","id":"r-version-1","chapter":"13 Submission package","heading":"13.3.3 R version","text":"Always use consistent version R developing TLFs submission.\nexample, enforce rule use R x.y.z z = 1,\nR 4.0.1 R 4.1.1.\ncan automatically checked using \nstartup script R project opened.","code":""},{"path":"submission-package.html","id":"package-repo-version","chapter":"13 Submission package","heading":"13.3.4 Package repo version","text":"Always use snapshot package repo developing TLFs submission.\n, can checked project startup script,\ndiscussed section 10.2.","code":""},{"path":"submission-package.html","id":"system-environments","chapter":"13 Submission package","heading":"13.3.5 System environments","text":"Introducing extra external dependencies likely increase cost\nqualification, validation, testing, maintenance,\nespecially Windows.\nTherefore, recommended keep dependency chain simple,\nespecially involving compiled code (e.g., C, C++, Fortran).","code":""},{"path":"submission-package.html","id":"prepare-r-packages-for-submission","chapter":"13 Submission package","heading":"13.4 Prepare R packages for submission","text":"prepare R packages submission, one needs pack packages text files, verify files contain ASCII characters.\npacked packages, one can unpack install text files, .","code":""},{"path":"submission-package.html","id":"pack","chapter":"13 Submission package","heading":"13.4.1 Pack","text":"Let’s pack esubdemo package text file.\nAssume source package path esubdemo/.\nable pack package single pipe:\nFIGURE 13.1: Output pkglite::pack()\nLet’s open generated text file:\nFIGURE 13.2: Preview generated text file\nhappened pipe?\nfunction pkglite::collate() evaluates specified scope \nfolders files defined list file specifications,\ngenerates file collection object.\nfile collection contains metadata required properly convert\nfiles text used pkglite::pack().\nflow, can define scope R source package\npacked submission flexible yet principled way.pack multiple R packages, simply feed multiple file collections inputs:R packages always packed specified order always\nunpacked installed order. Therefore, make sure \npack low-level dependencies first.details customize file specifications\noperate file collections,\ncheck vignette\ngenerate file specifications\n\ncurate file collections.","code":"\nlibrary(\"pkglite\")\n\n\"esubdemo/\" %>%\n  collate(file_ectd(), file_auto(\"inst\")) %>%\n  pack(output = \"r0pkgs.txt\")\nfile.edit(\"r0pkgs.txt\")\npack(\n  \"/path/to/pkg1/\" %>% collate(file_ectd()),\n  \"/path/to/pkg2/\" %>% collate(file_ectd()),\n  output = \"r0pkgs.txt\"\n)"},{"path":"submission-package.html","id":"verify","chapter":"13 Submission package","heading":"13.4.2 Verify","text":"always verify text file contains ASCII characters:give TRUE file contains ASCII characters,\nFALSE affected lines otherwise.","code":"\nverify_ascii(\"r0pkgs.txt\")"},{"path":"submission-package.html","id":"unpack","chapter":"13 Submission package","heading":"13.4.3 Unpack","text":"One can unpack install package text file, .\nexample:test successful, command can used ADRG instructions\nrestoring installing packed R package(s).can proceed move file r0pkgs.txt folder\nectddemo/m5/datasets/ectddemo/analysis/adam/programs/,\nspecify output text file path directly.","code":"\nunpack(\"r0pkgs.txt\", output = \"/tmp/\", install = TRUE)"},{"path":"submission-package.html","id":"prepare-analysis-programs-for-submission","chapter":"13 Submission package","heading":"13.5 Prepare analysis programs for submission","text":"Besides R packages, need convert R Markdown (.Rmd) files\n.txt files saved programs/ folder.\ncan knitr::purl():Optionally, can add header individual .txt files explain\ncontext help reviewers rerun code. example:automate process:","code":"\ninput_path <- \"esubdemo/vignettes/\"\noutput_path <- \"ectddemo/m5/datasets/ectddemo/analysis/adam/programs/\"\n\nconvert_rmd <- function(filename, input_dir, output_dir) {\n  knitr::purl(\n    file.path(input_dir, paste0(filename, \".Rmd\")),\n    output = file.path(output_dir, paste0(filename, \".txt\"))\n  )\n}\n\n\"tlf-01-disposition\" %>% convert_rmd(input_path, output_path)\n\"tlf-02-population\" %>% convert_rmd(input_path, output_path)\n\"tlf-03-baseline\" %>% convert_rmd(input_path, output_path)\n\"tlf-04-efficacy\" %>% convert_rmd(input_path, output_path)\n\"tlf-05-ae-summary\" %>% convert_rmd(input_path, output_path)\n\"tlf-06-ae-spec\" %>% convert_rmd(input_path, output_path)\n# Note to Reviewer\n# To rerun the code below, please refer to the ADRG appendix.\n# After the required packages are installed,\n# the path variable needs to be defined by using the example code below.\n#\n# path = list(adam = \"/path/to/esub/analysis/adam/datasets\") # Modify to use actual location\n# path$outtable = path$outgraph = \".\" # Outputs saved to the current folder\nheader <- readLines(textConnection(\"# Note to Reviewer\n# To rerun the code below, please refer to the ADRG appendix.\n# After the required packages are installed,\n# the path variable needs to be defined by using the example code below.\n#\n# path = list(adam = \\\"/path/to/esub/analysis/adam/datasets\\\") # Modify to use actual location\n# path$outtable = path$outgraph = \\\".\\\" # Outputs saved to the current folder\"))\n\nappend_header <- function(filename, output_dir, header) {\n  file <- file.path(output_dir, paste0(filename, \".txt\"))\n  x <- readLines(file)\n  y <- c(header, \"\", x)\n  writeLines(y, con = file)\n  invisible(file)\n}\n\n\"tlf-01-disposition\" %>% append_header(output_path, header)\n\"tlf-02-population\" %>% append_header(output_path, header)\n\"tlf-03-baseline\" %>% append_header(output_path, header)\n\"tlf-04-efficacy\" %>% append_header(output_path, header)\n\"tlf-05-ae-summary\" %>% append_header(output_path, header)\n\"tlf-06-ae-spec\" %>% append_header(output_path, header)"},{"path":"submission-package.html","id":"update-adrg","chapter":"13 Submission package","heading":"13.6 Update ADRG","text":"converted R packages R Markdown files appropriate\nformats verified can restored executed correctly,\nneed update ADRG provide guidelines use .Specifically, need update two sections ADRG.first section “Macro Programs”, R R package versions\nsnapshot date provided. example:second section (Appendix) include step--step instructions\nreproduce running environment rerun analyses. example:example ADRG following template can found \nectddemo.","code":"7.x Macro Programs\n\nSubmitted R programs have [specific patterns] in filenames.\nAll internally developed R functions are saved in the r0pkgs.txt file.\nThe recommended steps to unpack these R functions for analysis output\nprograms are described in the Appendix.\n\nThe table below contains the software version and instructions\nfor executing the R analysis output programs:Appendix: Instructions to Execute Analysis Program in R\n\n1. Install R\n\nDownload and install R 4.1.1 for Windows from\nhttps://cran.r-project.org/bin/windows/base/old/4.1.1/R-4.1.1-win.exe\n\n2. Define working directory\n\nCreate a temporary working directory, for example, \"C:\\tempwork\".\nCopy all submitted R programs into the temporary folder.\nAll steps below should be executed in this working directory\nrepresented as \".\" in the example R code below.\n\n3. Specify R package repository\n\nThe R packages are based on CRAN at 2021-08-06. To install the exact\nR package versions used in this project, run the code below to set\nthe snapshot repository.\n\noptions(repos = \"https://mran.microsoft.com/snapshot/2021-08-06/\")\n\n4. Install open-source R packages\n\nIn the same R session, install the required packages by running the code below.\n\ninstall.packages(c(\"pkglite\", \"publicpkg1\", \"publicpkg2\"))\n\n5. Install proprietary R packages\n\nAll internal R packages are packed in the file r0pkgs.txt. In the same R session,\nrestore the package structures and install them by running the code below.\nAdjust the output path as needed to use a writable local directory.\n\npkglite::unpack(\"r0pkgs.txt\", output = \".\", install = TRUE)\n\n6. Update path to dataset and TLFs\n\nINPUT path: to rerun the analysis programs, define the path variable\n\n- Path for ADaM data: path$adam\n\nOUTPUT path: to save the analysis results, define the path variable\n\n- Path for output TLFs: path$output\n\nAll these paths need to be defined before executing the analysis program. For example:\n\npath = list(adam = \"/path/to/esub/analysis/adam/datasets/\") # Modify to use actual location\npath$outtable = path$outgraph = \".\" # Outputs saved to the current folder\n\n7. Execute analysis program\n\nTo reproduce the analysis results, rerun the following programs:\n\n- tlf-01-disposition.txt\n- tlf-02-population.txt\n- tlf-03-baseline.txt\n- tlf-04-efficacy.txt\n- tlf-05-ae-summary.txt\n- tlf-06-ae-spec.txt"},{"path":"submission-package.html","id":"update-arm","chapter":"13 Submission package","heading":"13.7 Update ARM","text":"ARM (Analysis Results Metadata) provide specific information\nrelated R two sections:Section 2: indicate Programming Language;Section 3: document details R programs listed section 3.example, ARM section 2, “Analysis Results Metadata Summary”:ARM section 3, “Analysis Results Metadata Details”:","code":""},{"path":"running-environment.html","id":"running-environment","chapter":"14 Running environment","heading":"14 Running environment","text":"previous chapter, generated instructions manually\ncreate running environments reproducing &R deliverables.chapter, focus automating creation \nR environments R code accelerate dry run testing process,\nsimplifying ADRG instructions, making easy recreate\ndifferent environment settings reproducible analysis results.","code":""},{"path":"running-environment.html","id":"prerequisites-1","chapter":"14 Running environment","heading":"14.1 Prerequisites","text":"cleanslate R package offers solution \ncreate portable R environments.Q4 2021, cleanslate package used chapter\nstill active development validation.\nchapter gives preview planned APIs.\nmay change future.Install cleanslate CRAN (available):GitHub (available):","code":"\ninstall.packages(\"cleanslate\")\nremotes::install_github(\"Merck/cleanslate\")"},{"path":"running-environment.html","id":"practical-considerations","chapter":"14 Running environment","heading":"14.2 Practical considerations","text":"cleanslate package supports:Creating project folder project-specific context\n(.Rproj, .Rprofile, .Renviron)Installing specific version R project folderInstalling specific version Rtools project folderAn essential feature cleanslate require\nadministrator privileges run R Rtools installers.\nmakes easier deploy enterprise settings\navoids security portability concerns.many &R deliverables currently created, validated, delivered\nWindows, primary focus Windows moment,\nsupport platforms might added future versions.","code":""},{"path":"running-environment.html","id":"create-canonical-environments","chapter":"14 Running environment","heading":"14.3 Create canonical environments","text":"One can create running environment “canonical” settings \nsingle function call use_cleanslate():willCreate project folder C:/temp/ .Rproj file;Download R 4.1.1 installer CRAN, install C:/temp/R/;install Rtools (default, rtools_version = NULL);Create .Rprofile file project folder, set options(repos)\nuse specified repo (MRAN snapshot example),\ngive instruction set R binary path RStudio;Create .Renviron file project folder set \nlibrary path library project-specific R installation.principle, one always double-click .Rproj file \nopen project.\nensure sanity checks .Rprofile, whether \nR library located within project folder.","code":"\ncleanslate::use_cleanslate(\n  \"C:/temp/\",\n  r_version = \"4.1.1\",\n  from = \"https://cran.r-project.org/\",\n  repo = \"https://mran.microsoft.com/snapshot/2021-08-06/\"\n)"},{"path":"running-environment.html","id":"create-tailored-environments","chapter":"14 Running environment","heading":"14.4 Create tailored environments","text":"create customized running environment, one can use specific\nfunctions tailor aspect, example:project context functions\n(use_project(), use_rprofile(), use_renviron) support custom templates\nusing brew.use_r_*() functions variations serve shortcuts\nuse R versions defined release lifecycles, example,\nuse_r_release(), use_r_oldrel(), use_r_devel().\nNote ensure better reproducibility, one still use\nuse_r_version() release, oldrel, devel versions \nshift time goes .helper functions version_*() snapshot_*() can assist \ndetermining specific versions R Rtools currently available,\nbesides generating verifying snapshot repo links.","code":"\nlibrary(\"cleanslate\")\n\n\"C:/temp/\" %>%\n  use_project() %>%\n  use_rprofile() %>%\n  use_renviron() %>%\n  use_r_version(version = \"4.1.1\") %>%\n  use_rtools(version = \"rtools40\")"},{"path":"running-environment.html","id":"update-adrg-1","chapter":"14 Running environment","heading":"14.5 Update ADRG","text":"use cleanslate, remember update ADRG instructions \nexecuting analysis programs R. Mostly, can simplify\nfirst three steps creating project, installing specific\nversion R, configuring package repo location.\nexample:","code":"Appendix: Instructions to Execute Analysis Program in R\n\n1. Setup R environment\n\nOpen the existing R, install the required packages by running the code below.\n\ninstall.packages(\"cleanslate\")\n\nCreate a temporary working directory, for example, \"C:\\tempwork\".\nCopy all submitted R programs into the temporary folder.\nIn the same R session, run the code below to create a project\nwith a portable R environment.\n\ncleanslate::use_cleanslate(\n  \"C:/temp/\",\n  r_version = \"4.1.1\",\n  from = \"https://cran.r-project.org/\",\n  repo = \"https://mran.microsoft.com/snapshot/2021-08-06/\"\n)\n\n2. Open the project\n\nGo to the working directory created above, double click the .Rproj file\nto open the project in RStudio. Follow the instructions to select the\nproject-specific R version, then restart RStudio. If successful,\nthe R version and package repo should be printed as defined above.\n\n3. Install open-source R packages\n\nIn the new R session, install the required packages by running the code below.\n\ninstall.packages(c(\"pkglite\", \"publicpkg1\", \"publicpkg2\"))\n\n4. Install proprietary R packages\n\nAll internal R packages are packed in the file r0pkgs.txt. In the same R session,\nrestore the package structures and install them by running the code below.\nAdjust the output path as needed to use a writable local directory.\n\npkglite::unpack(\"r0pkgs.txt\", output = \".\", install = TRUE)\n\n5. Update path to dataset and TLFs\n\nINPUT path: to rerun the analysis programs, define the path variable\n\n- Path for ADaM data: path$adam\n\nOUTPUT path: to save the analysis results, define the path variable\n\n- Path for output TLFs: path$output\n\nAll these paths need to be defined before executing the analysis program. For example:\n\npath = list(adam = \"/path/to/esub/analysis/adam/datasets/\") # Modify to use actual location\npath$outtable = path$outgraph = \".\" # Outputs saved to the current folder\n\n6. Execute analysis program\n\nTo reproduce the analysis results, rerun the following programs:\n\n- tlf-01-disposition.txt\n- tlf-02-population.txt\n- tlf-03-baseline.txt\n- tlf-04-efficacy.txt\n- tlf-05-ae-summary.txt\n- tlf-06-ae-spec.txt"},{"path":"running-environment.html","id":"rstudio-addin","chapter":"14 Running environment","heading":"14.6 RStudio addin","text":"make convenient use cleanslate experiments,\none can also use RStudio addin. cleanslate\ninstalled, click Addins -> cleanslate -> Create portable R environment\nRStudio, call cleanslate:::create_env_addin() open .\nFIGURE 14.1: cleanslate RStudio addin\naddin provides wizard-like interface help create environment\nimportant options, yet less flexibility compared\nfunctional API demonstrated .","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"Fitzpatrick, Brian, Ben Collins-Sussman. 2012. Team Geek: Software Developer’s Guide Working Well Others. O’Reilly Media.Ginnaram, Madhusudhan, Simiao Ye, Yalin Zhu, Yilong Zhang. 2021. “Process Validate Internal Developed R Package Regulatory Environment.” PharmaSUG.Martin, Robert C, James Grenning, Simon Brown. 2018. Clean Architecture: Craftsman’s Guide Software Structure Design. Prentice Hall.Marwick, Ben, Carl Boettiger, Lincoln Mullen. 2018. “Packaging Data Analytical Work Reproducibly Using R (Friends).” American Statistician 72 (1): 80–88.Nüst, Daniel, Dirk Eddelbuettel, Dom Bennett, Robrecht Cannoodt, Dav Clark, Gergely Daróczi, Mark Edmondson, et al. 2020. “Rockerverse: Packages Applications Containerisation R.” R Journal 12 (1): 437–61. https://doi.org/10.32614/RJ-2020-007.Wickham, Hadley. 2015. R Packages: Organize, Test, Document, Share Code. O’Reilly Media.Wu, Peikun, Uday Preetham Palukuru, Yiwen Luo, Sarad Nepal, Yilong Zhang. 2021. “Analysis Reporting Regulated Clinical Trial Environment Using R.” PharmaSUG.","code":""}]
