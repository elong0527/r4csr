# Baseline characteristics

```{r, include=FALSE}
source("_common.R")
```

Following [ICH E3 guidance](https://database.ich.org/sites/default/files/E3_Guideline.pdf),
we need to summarize critical demographic and baseline characteristics of the participants
in Section 11.2, Demographic and Other Baseline Characteristics.

This chapter provides a step-by-step guide on creating a simple 
baseline characteristics table in RTF format.
The expected output of the table is as follows:

```{r, out.width = "100%", out.height = if (knitr::is_html_output()) "400px", echo = FALSE, fig.align = "center"}
knitr::include_graphics("tlf/tlf_base.pdf")
```

There are many R packages that can efficiently summarize baseline information.
The [table1](https://github.com/benjaminrich/table1) R package is one of them.

```{r}
library(haven)   # Read SAS data
library(dplyr)   # Manipulate data
library(tidyr)   # Manipulate data
library(stringr) # Manipulate string
library(tools)   # Manipulate string
library(table1)  # Baseline characteristics table
library(r2rtf)   # Reporting in RTF format
```

## Input data 

We begin by reading the `adsl` dataset, 
which comprises all the necessary information for generating the baseline characteristics table.

```{r}
adsl <- read_sas("data-adam/adsl.sas7bdat")
```

For simplicity, we only analyze `SEX`, `AGE` and, `RACE` in this example.

## Output data 

The table1 R package directly creates an HTML report for the baseline characteristic table.
More details of the table1 R package can
be found in the package
[vignettes](https://benjaminrich.github.io/table1/vignettes/table1-examples.html).

```{r}
ana <- adsl %>%
  mutate(
    SEX = factor(SEX, c("F", "M"), c("Female", "Male")),
    RACE = toTitleCase(tolower(RACE))
  )

tbl <- table1(~ SEX + AGE + RACE | TRT01P, data = ana)
tbl
```

let's transfer the output into a dataframe that 
exclusively consists of ASCII characters, as recommended by regulatory agencies. 

```{r}
tbl_base <- tbl %>%
  as.data.frame() %>%
  as_tibble() %>%
  mutate(across(
    everything(),
    ~ str_replace_all(.x, intToUtf8(160), " ")
  ))


names(tbl_base) <- str_replace_all(names(tbl_base), intToUtf8(160), " ")
tbl_base
```

## Reporting 

By using `tbl_base` as the input, we can generate the baseline characteristics table.

In the code below, `text_indent_first` and `text_indent_left`
are used to control the indentation space of the text. 
These parameters come in handy when you need to manage the whitespace within a lengthy phrase.

```{r}
colheader1 <- paste(names(tbl_base), collapse = "|")
colheader2 <- paste(tbl_base[1, ], collapse = "|")
rel_width <- c(2.5, rep(1, 4))

tbl_base[-1, ] %>%
  rtf_title(
    "Baseline Characteristics of Participants",
    "(All Participants Randomized)"
  ) %>%
  rtf_colheader(colheader1,
    col_rel_width = rel_width
  ) %>%
  rtf_colheader(colheader2,
    border_top = "",
    col_rel_width = rel_width
  ) %>%
  rtf_body(
    col_rel_width = rel_width,
    text_justification = c("l", rep("c", 4)),
    text_indent_first = -240,
    text_indent_left = 180
  ) %>%
  rtf_encode() %>%
  write_rtf("tlf/tlf_base.rtf")
```

```{r, include=FALSE}
rtf2pdf("tlf/tlf_base.rtf")
```

```{r, out.width = "100%", out.height = if (knitr::is_html_output()) "400px", echo = FALSE, fig.align = "center"}
knitr::include_graphics("tlf/tlf_base.pdf")
```